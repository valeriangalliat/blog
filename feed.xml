<?xml version="1.0" encoding="utf-8" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CodeJam</title>
  <subtitle>Hey, I‚Äôm Val, welcome to my blog!</subtitle>
  <link href="https://www.codejam.info/feed.xml" rel="self" />
  <link href="https://www.codejam.info/" />
  <id>https://www.codejam.info/</id>
  <updated>2022-04-30T22:20:04.051Z</updated>
  <author>
    <name>Val</name>
  </author>
  <entry>
    <title>graftcp: inspect any program‚Äôs HTTPS traffic through a proxy!</title>
    <link href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html" />
    <id>https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html</id>
    <updated>2022-04-30T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>Recently, I <a href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#spying-on-the-spyware-and-monitoring-its-network-traffic">needed to sniff an app‚Äôs HTTPS traffic</a>.</p>
<p>While sniffing plaintext HTTP traffic is easy, by targeting the
transport layer with tools like <a href="https://linux.die.net/man/8/tcpdump"><code>tcpdump(8)</code></a>
or Wireshark, <em>HTTPS is another beast</em>.</p>
<p>Because of the TLS encryption, all we see at the transport layer is a
bunch of unusable encrypted data (and that‚Äôs the whole point of HTTPS).
So we need to resort to solutions at a higher layer in the stack.</p>
<p>My go-to for this kind of task is <a href="https://mitmproxy.org/">mitmproxy</a>,
an interactive HTTPS proxy, as well as its headless counterpart
<em>mitmdump</em>.</p>
<p>But those are only half of the solution. A proxy server is useless until
we route HTTPS traffic <em>through it</em>. And depending on the context, this
task can go from pretty trivial to quite tricky.</p>
<h2 id="common-ways-to-configure-a-proxy" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#common-ways-to-configure-a-proxy"><span>Common ways to configure a proxy</span></a></h2>
<p>There‚Äôs 3 main ways that you can use to configure a proxy:</p>
<ol>
<li>the OS level,</li>
<li>the application level,</li>
<li>the environment level.</li>
</ol>
<p>I already <a href="https://www.codejam.info/2021/07/intercept-macos-app-traffic-mitmproxy.html">gave an introduction to mitmproxy</a>
last year on the blog, in which I explored <a href="https://www.codejam.info/2021/07/intercept-macos-app-traffic-mitmproxy.html#first-try-macos-network-proxy-settings">the OS level</a>
and <a href="https://www.codejam.info/2021/07/intercept-macos-app-traffic-mitmproxy.html#second-try-spotify-supports-app-level-proxy-settings">the app level</a>,
but I‚Äôll give a quick refresher here.</p>
<h3 id="the-os-level" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#the-os-level"><span>The OS level</span></a></h3>
<p>Your OS usually lets you configure a proxy in the networking settings.
For example on macOS it‚Äôs in the advanced network preferences, and on
Android it‚Äôs in the advanced Wi-Fi settings.</p>
<p>It‚Äôs a good way to globally configure a proxy, but there‚Äôs no guarantee
that apps are going to respect it. Typically, the default browser that
ships with the OS (e.g. Safari) will use it, and some third-party
browsers might too, but in general most other apps just ignore it. Not
so good.</p>
<h3 id="the-application-level" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#the-application-level"><span>The application level</span></a></h3>
<p>While most apps don‚Äôt respect OS-level proxy configuration, some can
provide you with a way to configure a proxy at their own level.</p>
<p>Typically this will be Firefox‚Äôs connection settings, with its very own
proxy configuration, Spotify‚Äôs advanced settings that <a href="https://www.codejam.info/2021/07/intercept-macos-app-traffic-mitmproxy.html#second-try-spotify-supports-app-level-proxy-settings">let you configure a proxy</a>,
or more recently I‚Äôve explored <a href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#the-proxy-hostname-argument">the <code>--proxy_hostname</code> argument</a>
to the <code>osqueryd</code> program.</p>
<p>But it‚Äôs up to the app‚Äôs developers to decide if they want or not to let
you configure a proxy, and how rigorously they use it‚Ä¶ (they might use
the proxy for some requests but not all of them).</p>
<h3 id="the-environment-level" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#the-environment-level"><span>The environment level</span></a></h3>
<p>Finally, there are two pretty commonly used environment variables
(although I believe not standard per se) to configure a proxy:
<code>http_proxy</code> and <code>https_proxy</code>. They respectively configure a proxy to
route HTTP and HTTPS traffic through.</p>
<p>For example the Python language <a href="https://github.com/python/cpython/blob/a03a09e068435f47d02649dda93988dc44ffaaf1/Lib/urllib/request.py#L2507">supports those</a>
in its native <code>urllib</code> package, and while Node.js <a href="https://github.com/nodejs/node/issues/8381">doesn‚Äôt</a>,
the popular <a href="https://github.com/axios/axios">axios</a> library
<a href="https://github.com/axios/axios/blob/bc733fec78326609e751187c9d453cee9bf1993a/lib/adapters/http.js#L186">also supports them</a>
out of the box.</p>
<p>So basically, it might or might not work depending on the implementation
of the software that you‚Äôre using, but it‚Äôs definitely worth trying!</p>
<h2 id="when-nothing-works-the-hacker-way" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#when-nothing-works-the-hacker-way"><span>When nothing works: the hacker way</span></a></h2>
<p>So far all we‚Äôve done is configuring a proxy in interfaces that
explicitly allow us to set a proxy. But sometimes this is just not
enough. That‚Äôs when we resort to ways to configure a proxy in places
that don‚Äôt explicitly let us do so. üòè</p>
<p>There‚Äôs two ways to do this. The most common one is to leverage
<code>LD_PRELOAD</code> with dynamically linked binaries to override symbols in a
library. This is the approach that <a href="https://linux.die.net/man/8/tsocks"><code>tsocks(1)</code></a>,
<a href="https://github.com/haad/proxychains">ProxyChains</a> and <a href="https://github.com/rofl0r/proxychains-ng">ProxyChains-NG</a>
use, hijacking the <a href="https://linux.die.net/man/2/connect"><code>connect(2)</code></a>
<a href="https://en.wikipedia.org/wiki/C_standard_library">libc</a> function to
route requests through the proxy of your choice.</p>
<p>This is a great method when using programs that are dynamically linked
against libc, but it will fail for statically liked programs, as well as
programs that don‚Äôt use libc (Go programs for example).</p>
<p>This is where <a href="https://github.com/hmgle/graftcp">graftcp</a> shines.
Instead of hooking at the libc level, it leverages
<a href="https://linux.die.net/man/2/ptrace"><code>ptrace(2)</code></a> to modify the
<a href="https://linux.die.net/man/3/connect"><code>connect(3)</code></a> syscall arguments!
Essentially, it‚Äôs acting at a lower level and that‚Äôs how it‚Äôs able to
proxy against statically liked programs that don‚Äôt use libc. Their
detailed <a href="https://github.com/hmgle/graftcp#principles">how does it work</a>
explanation is really worth a read.</p>
<h3 id="installation" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#installation"><span>Installation</span></a></h3>
<pre><code class="hljs language-sh">git <span class="hljs-built_in">clone</span> https://github.com/hmgle/graftcp.git
<span class="hljs-built_in">cd</span> graftcp
make
</code></pre>
<h3 id="usage" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#usage"><span>Usage</span></a></h3>
<p>From there, you can use <code>local/graftcp-local</code> to start the graftcp
server, and configure it to use your proxy (for example mitmproxy
starts a HTTP proxy on port 8080 by default). Because graftcp also
defaults to a SOCKS5 proxy on <code>localhost:1080</code>, we need to force it to
use the HTTP proxy we configured by using <code>--select_proxy_mode only_http_proxy</code>:</p>
<pre><code class="hljs language-sh"><span class="hljs-built_in">local</span>/graftcp-local --http_proxy localhost:8080 --select_proxy_mode only_http_proxy
</code></pre>
<p>We can do the same thing by ‚Äúemptying‚Äù the preconfigured SOCKS5 proxy:</p>
<pre><code class="hljs language-sh"><span class="hljs-built_in">local</span>/graftcp-local --http_proxy localhost:8080 --socks5 <span class="hljs-string">&#x27;&#x27;</span>
</code></pre>
<p>Or we can instead run mitmproxy as a SOCKS5 proxy, here on port 1080
(the default for graftcp):</p>
<pre><code class="hljs language-sh">mitmproxy --mode socks5 -p 1080
</code></pre>
<p>Then we can run <code>local/graftcp-local</code> without arguments and it‚Äôll just
work.</p>
<p>Either way, once the proxy and <code>local/graftcp-local</code> program is started,
we can prefix any command with <code>./graftcp</code> to force it to run its
network calls through the proxy!</p>
<pre><code class="hljs language-sh">./graftcp curl https://www.codejam.info/
</code></pre>
<h3 id="dealing-with-certificates" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#dealing-with-certificates"><span>Dealing with certificates</span></a></h3>
<p>However, this should complain that the SSL certificate from mitmproxy is
untrusted. We can make it go through by appending <code>-k</code> (<code>--insecure</code>) to
the <code>curl</code> command:</p>
<pre><code class="hljs language-sh">./graftcp curl https://www.codejam.info/ --insecure
</code></pre>
<p>A better solution though would be to add the mitmproxy CA certificate
found in <code>~/.mitmproxy/mitmproxy-ca-cert.pem</code> to the system trusted
certificates. This will vary depending on your OS and distribution, but
in my case that would be done with:</p>
<pre><code class="hljs language-sh">sudo trust anchor ~/.mitmproxy/mitmproxy-ca-cert.pem
</code></pre>
<p>Then the <code>curl</code> command should work without <code>--insecure</code>!</p>
<h3 id="short-version" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#short-version"><span>Short version</span></a></h3>
<p>Finally, if you don‚Äôt want to bother running <code>local/graftcp-local</code> and
<code>./graftcp</code> separately, you can instead use <code>local/mgraftcp</code>. If you
still use the SOCKS5 proxy on port 1080:</p>
<pre><code class="hljs language-sh"><span class="hljs-built_in">local</span>/mgraftcp curl https://www.codejam.info/
</code></pre>
<p>Or with a HTTP proxy on port 8080:</p>
<pre><code class="hljs language-sh"><span class="hljs-built_in">local</span>/mgraftcp --http_proxy localhost:8080 --select_proxy_mode only_http_proxy curl https://www.codejam.info/
</code></pre>
<p>This is useful if you only want to use graftcp for a single command, or
don‚Äôt mind configure the proxy settings every single time. Otherwise the
graftcp server method with <code>local/graftcp-local</code> works better as you
only have to configure your proxy once and any call to <code>./graftcp</code> will
use it!</p>
<h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html#conclusion"><span>Conclusion</span></a></h2>
<p>graftcp is a really powerful tool that allows you to redirect HTTPS
traffic through a proxy of your choice, even in situations where this
wouldn‚Äôt be allowed or planned for.</p>
<p>Because I love inspecting programs‚Äô network traffic to know how they
work, and it‚Äôs not always easy to get access to their requests logs,
graftcp is now a go-to of mine for this kind of task, as it‚Äôs proven to
work flawlessly and very reliably, even with statically linked binaries
and programs that don‚Äôt link against libc like it‚Äôs the case with Go!</p>
<p>I hope you learnt something with this post, and I wish you a happy
network sniffing. ü§ò</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1520528360182620160">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Install the Vanta agent on a M1 Mac without Rosetta (and more)</title>
    <link href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html" />
    <id>https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html</id>
    <updated>2022-04-30T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>Did you recently get asked to install the Vanta agent on your M1 Mac and
got prompted to install Rosetta for it to run?</p>
<p>Do you like running a Rosetta-free system?</p>
<p>Then this post is for you.</p>
<p>Also if you also don‚Äôt like running (benevolent) spyware with <code>root</code>
permissions, and want to monitor what the spyware is precisely spying
about you, read on, I have a few other things for you. üòâ</p>
<h2 id="the-rosetta-thing" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#the-rosetta-thing"><span>The Rosetta thing</span></a></h2>
<p>I wrote <a href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html">a more generic post</a>
about this, and I encourage you to read it if you want to learn about
all the technical details, but for the purpose of this Vanta-specific
article, I‚Äôll keep it short. The objective is to:</p>
<ol>
<li>Extract the <code>vanta.pkg</code> installer to access its contents.</li>
<li>Update the <code>Distribution</code> XML file to flag ARM support (removes the
Rosetta prompt).</li>
<li>Extract the <code>vanta-raw.pkg/Payload</code> archive and replace the x86-64
<code>osqueryd</code> binary by the universal binary from <a href="https://github.com/osquery/osquery/releases/tag/5.2.2">version 5.2.2</a>
(or greater).</li>
<li>Repackage the whole thing.</li>
</ol>
<p>Assuming you have <code>vanta.pkg</code> already downloaded (otherwise you can get
it from <a href="https://github.com/VantaInc/vanta-agent-scripts/blob/b4e421f11d51896d274ae5782884c90f6ba5ce27/install-macos.sh#L8%5D">here</a>),
run the following commands:</p>
<pre><code class="hljs language-sh"><span class="hljs-comment"># Create a directory to extract the package into</span>
<span class="hljs-built_in">mkdir</span> vanta
<span class="hljs-built_in">cd</span> vanta

<span class="hljs-comment"># Extract the package in the current directory</span>
xar -xf ../vanta.pkg

<span class="hljs-comment"># Go in the subpackage</span>
<span class="hljs-built_in">cd</span> vanta-raw.pkg

<span class="hljs-comment"># Create a directory to extract the payload into</span>
<span class="hljs-built_in">mkdir</span> PayloadOut
<span class="hljs-built_in">cd</span> PayloadOut

<span class="hljs-comment"># Extract the payload in the current directory</span>
cpio -i &lt; ../Payload

<span class="hljs-comment"># Stream the tar archive for `osqueryd` 5.2.2 (follow redirects) and extract it to the current directory</span>
curl --location <span class="hljs-string">&#x27;https://github.com/osquery/osquery/releases/download/5.2.2/osqueryd-macos-bare-5.2.2.tar.gz&#x27;</span> | tar xf -

<span class="hljs-comment"># We now have a `osqueryd` binary that we can move to the right location</span>
<span class="hljs-built_in">mv</span> osqueryd usr/local/vanta

<span class="hljs-comment"># Recreate the cpio archive</span>
find . | cpio -oz --owner 0:80 &gt; ../Payload

<span class="hljs-comment"># Go back to the parent directory and remove our temporary `PayloadOut` directory</span>
<span class="hljs-built_in">cd</span> ..
<span class="hljs-built_in">rm</span> -rf PayloadOut

<span class="hljs-comment"># Go back to the parent directory</span>
<span class="hljs-built_in">cd</span> ..

<span class="hljs-comment"># Flag ARM support in the `Distribution` file</span>
sed -i <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&#x27;s/&lt;allowed-os-versions&gt;/&lt;options hostArchitectures=&quot;arm64,x86_64&quot; \/&gt;\n    &lt;allowed-os-versions&gt;/&#x27;</span> Distribution

<span class="hljs-comment"># Alternative with GNU sed</span>
<span class="hljs-comment"># gsed -i &#x27;/&lt;installer-gui-script/a \    &lt;options hostArchitectures=&quot;arm64,x86_64&quot; /&gt;&#x27; Distribution</span>

<span class="hljs-comment"># Repackage the main installer</span>
xar --compression none -cf ../vanta-new.pkg .
</code></pre>
<p>This will give you a <code>vanta-new.pkg</code> installer that now has proper ARM
support and won‚Äôt prompt you to install Rosetta!</p>
<p>Again if you want to know precisely how this works, check out my
<a href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html">detailed article on the topic</a>.</p>
<p>But while having native M1 support is great, there‚Äôs still a few things
that concern me about this program.</p>
<p>For example, I didn‚Äôt actually run that installer on my machine because
it requires <code>root</code> permissions and I don‚Äôt want to run untrusted code as
<code>root</code>. I still tested the package in a macOS VM (which is <a href="https://www.codejam.info/2022/04/macos-docker-linux-wayland.html">surprisingly easy to do nowdays</a>)
to confirm that the script works end-to-end. But for a machine I care
about, how do we install and run that thing with only user privileges?</p>
<h2 id="installing-and-running-vanta-without-root-privilege" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#installing-and-running-vanta-without-root-privilege"><span>Installing and running Vanta without <code>root</code> privilege</span></a></h2>
<p>It‚Äôs unclear what the this program does concretely, but it
<a href="https://help.vanta.com/hc/en-us/articles/360060881051-Getting-Started-with-the-Vanta-Agent">claims</a>
to be read-only (‚Äúit will <strong>not</strong> change anything on your machine‚Äù),
despite their installer and other commands requesting <code>root</code> access
(this is fishy AF).</p>
<p>I don‚Äôt like running as <code>root</code> anything that wasn‚Äôt shipped by Apple
as part of the macOS base system, with the exception of some specific
open-source programs in very particular cases (e.g. some <code>nmap</code>
invocations and such), or programs like nginx that I trust to properly
drop privileges after starting and binding to a reserved port.</p>
<p>This is definitely not the case of this agent, and there‚Äôs no way this
thing is going to run as <code>root</code>.</p>
<p>So how do we run it without giving it superuser privileges? First, we
need to dissect the package a bit and install it manually.</p>
<p>In the <a href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#the-rosetta-thing">first part</a>, we already extracted the
installer as well as the <code>Payload</code> archive, in a <code>PayloadOut</code> directory.
We‚Äôll start from there, and go in the <code>PayloadOut</code> directory to manually
install everything we need.</p>
<p>First we‚Äôll copy <code>Library/LaunchDaemons/com.vanta.metalauncher.plist</code>
to <code>~/Library/LaunchAgents/com.vanta.metalauncher.plist</code>. Why? Launch
daemons are systematically run as <code>root</code> while launch agents are user
services. Their format is otherwise compatible so that makes things easy
for us.</p>
<pre><code class="hljs language-sh"><span class="hljs-built_in">cp</span> Library/LaunchDaemons/com.vanta.metalauncher.plist ~/Library/LaunchAgents
</code></pre>
<p>We also replace the error log path in that file to point to a location
where we actually have write permission:</p>
<pre><code class="hljs language-sh">sed -i <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-string">&#x27;s,/var/log/vanta_stderr.log,/usr/local/vanta/log/vanta_stderr.log,&#x27;</span> ~/Library/LaunchAgents/com.vanta.metalauncher.plist
</code></pre>
<p>Then we can copy <code>etc/vanta.conf</code> and <code>usr/local/vanta</code> to <code>/etc/</code> and
<code>/usr/local</code> respectively.</p>
<pre><code class="hljs language-sh">sudo <span class="hljs-built_in">cp</span> etc/vanta.conf /etc
sudo <span class="hljs-built_in">cp</span> -r usr/local/vanta /usr/local
</code></pre>
<div class="note">
<p><strong>Note:</strong> OK I lied earlier, we do need <code>root</code> permission for this step.
But at no point in this section we‚Äôll run third-party code as <code>root</code>,
and that‚Äôs what I intended by ‚Äúwithout <code>root</code> privilege‚Äù.</p>
<p>Also, keep in mind that we need to copy the <code>vanta</code> directory to
<code>/usr/local</code> because that path is actually hardcoded everywhere in the
software binaries so we can‚Äôt easily run it from another location.</p>
</div>
<p>Vanta asserts that some binaries are owned by <code>root</code>, and refuses to run
otherwise. Once owned by <code>root</code> though, the program runs just fine
even from a user account.</p>
<pre><code class="hljs language-sh">sudo <span class="hljs-built_in">chown</span> root:admin /usr/local/vanta/launcher
sudo <span class="hljs-built_in">chown</span> root:admin /usr/local/vanta/osqueryd
</code></pre>
<p>Then, edit the <code>/etc/vanta.conf</code> file to set your agent key and email.</p>
<p>Finally we can start the service:</p>
<pre><code class="hljs language-sh">launchctl load -w ~/Library/LaunchAgents/com.vanta.metalauncher.plist
</code></pre>
<p>You can alternatively start the agent from any CLI instead of using
<a href="https://en.wikipedia.org/wiki/Launchd">launchd</a>:</p>
<pre><code class="hljs language-sh">/usr/local/vanta/metalauncher
</code></pre>
<div class="note">
<p><strong>Note:</strong> the agent needs to be started using an absolute path if you
want the <code>vanta-cli</code> and the Vanta app in the tray to report that the
agent is running. If you <code>cd /usr/local/vanta</code> and run <code>./metalauncher</code>,
those other tools will think it‚Äôs not running even though the agent is
actually running and reporting properly. üòÖ</p>
</div>
<p>And we‚Äôre up! The logs are happily reporting that everything is running
fine, and the menu bar app (if you chose to run it) also reports that
the agent is running.</p>
<div class="note">
<p><strong>Note:</strong> if you don‚Äôt want your menu bar to be ‚Äúpolluted‚Äù by the Vanta
icon, I think there‚Äôs a setting to hide it, or even better, just get rid
of <code>/usr/local/vanta/Vanta Agent.app</code> and you won‚Äôt see it ever again!</p>
<p>All that app seems to be really doing is <code>ps aux | grep /usr/local/vanta/metalauncher</code>
to check that the agent is running, so you can easily do that yourself
if you want.</p>
</div>
<blockquote>
<p>But Val, how do you know that the agent is working properly after you
installed it in such an esoteric way?</p>
</blockquote>
<p>Well, thanks to <a href="https://www.codejam.info/2022/04/macos-docker-linux-wayland.html">the VM</a> I mentioned
earlier, I could test that the network traffic of the agent installed
with the original x86-64 package is identical to that of my method
without <code>root</code>. üòÅ</p>
<blockquote>
<p>But Val, how do you see the network traffic of the app? It‚Äôs all HTTPS
and stuff.</p>
</blockquote>
<p>Well‚Ä¶</p>
<h2 id="spying-on-the-spyware-and-monitoring-its-network-traffic" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#spying-on-the-spyware-and-monitoring-its-network-traffic"><span>Spying on the spyware and monitoring its network traffic</span></a></h2>
<p>This agent is essentially a spyware that employees willingly install on
their work computer (or employers secretly install in some less ethical
cases) to spy on them with good intentions.</p>
<p>I‚Äôm more comfortable being spied on when I know precisely what is
captured and what is not. A salesperson can always say ‚Äúdon‚Äôt worry, we
respect your privacy‚Äù, but I tend to trust HTTPS traffic logs better. üòè</p>
<h3 id="ways-to-sniff-packets" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#ways-to-sniff-packets"><span>Ways to sniff packets</span></a></h3>
<p>There‚Äôs a multitude of ways to sniff network traffic from an app. If all
you care about is transport layer data (e.g. raw TCP or UDP traffic),
you can easily monitor it with tools like <a href="https://linux.die.net/man/8/tcpdump"><code>tcpdump(8)</code></a>
or Wireshark. But for encrypted HTTPS traffic, that won‚Äôt cut it (and
that‚Äôs the whole point of HTTPS).</p>
<p>When you have some control over the application you want to monitor, or
if it natively supports running through a proxy, a logging HTTPS proxy
like <a href="https://mitmproxy.org/">mitmproxy</a> is really useful. Some software
support communicating over a proxy through the pretty common
<code>http_proxy</code> and <code>https_proxy</code> environment variables. Others support
configuring a proxy via configuration files, UI, or command line
arguments. If this is your case, you‚Äôre in luck, and you can use those
means to make that program run its HTTPS traffic through mitmproxy!</p>
<p>Otherwise, you need to dig deeper and tools like
<a href="https://linux.die.net/man/8/tsocks"><code>tsocks(1)</code></a>,
<a href="https://github.com/haad/proxychains">ProxyChains</a>,
<a href="https://github.com/rofl0r/proxychains-ng">ProxyChains-NG</a> and
<a href="https://github.com/hmgle/graftcp">graftcp</a> (my personal favorite),
can really help. I wrote a <a href="https://www.codejam.info/2022/04/graftcp-inspect-https-traffic-proxy.html">dedicated article on the matter</a>
if you‚Äôre interested!</p>
<h3 id="the-proxy-hostname-argument" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#the-proxy-hostname-argument"><span>The <code>--proxy_hostname</code> argument</span></a></h3>
<p>In our case, it turns out that Vanta uses the open-source
<a href="https://github.com/osquery/osquery">osquery</a> program, which allows
defining a custom proxy (see <code>--proxy_hostname</code> on <a href="https://osquery.readthedocs.io/en/stable/deployment/remote/">this page</a>)!</p>
<p>So all we need to do is add our own <code>--proxy_hostname</code> to the <code>osqueryd</code>
arguments. While we don‚Äôt control the invocation of <code>osqueryd</code> (it‚Äôs in
the Vanta launcher binary), we can easily achieve this by wrapping the
<code>osqueryd</code> binary with a shell script:</p>
<pre><code class="hljs language-sh"><span class="hljs-built_in">mv</span> osqueryd osqueryd-orig

<span class="hljs-built_in">cat</span> &lt;&lt; <span class="hljs-string">EOF &gt; osqueryd
#!/bin/sh -e

exec /usr/local/vanta/osqueryd-orig --proxy_hostname=localhost:1337 &quot;$@&quot;
EOF</span>

<span class="hljs-built_in">chmod</span> +x osqueryd
</code></pre>
<p>With that shell script, we invoke the original <code>osqueryd</code> binary,
passing our custom <code>--proxy_hostname</code> option (here with a proxy running
on port 1337), and otherwise forwarding all other arguments.</p>
<h3 id="what-about-certificates" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#what-about-certificates"><span>What about certificates?</span></a></h3>
<p>In order to intercept HTTPS traffic, mitmproxy uses its own certificate,
that you can find in <code>~/.mitmproxy/mitmproxy-ca-cert.pem</code>. You can add
it to your system‚Äôs trusted certificates list, and as long as the
software you‚Äôre monitoring uses the system CA certificates list, you
should be good!</p>
<p>However Vanta pins their own certificate chain (using the
<code>--tls_server_certs</code> option), ignoring the certificates trusted at the
OS level.</p>
<p>The good news is that this pinned certificate is stored in
<code>/usr/local/vanta/cert.pem</code>, and we can just replace it with the
mitmproxy certificate!</p>
<pre><code class="hljs language-sh">sudo <span class="hljs-built_in">cat</span> ~/.mitmproxy/mitmproxy-ca-cert.pem &gt; /usr/local/vanta/cert.pem
</code></pre>
<p>After that, and restarting the service, we should be able to monitor the
traffic:</p>
<pre><code class="hljs language-sh">launchctl unload ~/Library/LaunchAgents/com.vanta.metalauncher.plist
launchctl load ~/Library/LaunchAgents/com.vanta.metalauncher.plist
</code></pre>
<h3 id="dump-with-mitmdump" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#dump-with-mitmdump"><span>Dump with mitmdump</span></a></h3>
<p>mitmproxy is great to interactively monitor the intercepted traffic, but
you don‚Äôt want to be watching that all the time. Instead, mitmdump can
be used to log the captured traffic to a file. Then you can parse that
file and query it the way you like.</p>
<pre><code class="hljs language-sh">mitmdump -w +/path/to/dump/file --listen-host 127.0.0.1 --listen-port 1337
</code></pre>
<p>Here, <code>-w</code> specifies the file we want to log to, and it‚Äôs prefixed by
<code>+</code> because we want to append to it instead of truncating it. The other
arguments are self-explanatory.</p>
<p>To start it as a launch agent the same way we start the Vanta agent, we
can add the following to <code>~/Library/LaunchAgents/mitmdump.plist</code>:</p>
<pre><code class="hljs language-xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span>
<span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">plist</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="hljs-string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">plist</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.0&quot;</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">dict</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>KeepAlive<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">true</span>/&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>Label<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>mitmdump<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>ProgramArguments<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">array</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>/path/to/mitmdump<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>-w<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>+/path/to/dump/file<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>--listen-host<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>127.0.0.1<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>--listen-port<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">string</span>&gt;</span>1337<span class="hljs-tag">&lt;/<span class="hljs-name">string</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">key</span>&gt;</span>RunAtLoad<span class="hljs-tag">&lt;/<span class="hljs-name">key</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">true</span>/&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">dict</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">plist</span>&gt;</span>
</code></pre>
<p>And enable it with:</p>
<pre><code class="hljs language-sh">launchctl load -w ~/Library/LaunchAgents/mitmdump.plist
</code></pre>
<h2 id="check-that-it-all-worked" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#check-that-it-all-worked"><span>Check that it all worked</span></a></h2>
<p>Finally, you can confirm that the agent is registered properly after all
those tweaks by checking the following link:</p>
<pre><code class="hljs">https://app.vanta.com/agent/info?uuid=YOUR-HARDWARE-UUID
</code></pre>
<p>Where <code>YOUR-HARDWARE-UUID</code> is your hardware UUID as it can be found in
<kbd>About This Mac</kbd>, <kbd>System Report‚Ä¶</kbd>, <kbd>Hardware
UUID</kbd>.</p>
<p>And that‚Äôs all for today! I hope you found on this page what is it you
were looking for, and that you learnt a thing or two along the way! Or
at least that you enjoyed reading through my adventures messing around
with this program. üòÇ</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Start a conversation on <a href="https://twitter.com/valeriangalliat">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>How to repackage a macOS .pkg installer for M1 support without Rosetta</title>
    <link href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html" />
    <id>https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html</id>
    <updated>2022-04-30T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>To start with, some basis that you might already know:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Apple_M1">Apple M1</a> is an
<a href="https://en.wikipedia.org/wiki/ARM_architecture_family">ARM</a>-based
CPU/GPU chip that ships with the latest Apple devices.</li>
<li><a href="https://en.wikipedia.org/wiki/Rosetta_(software)">Rosetta</a> is a
compatibility layer to translate <a href="https://en.wikipedia.org/wiki/X86-64">x86-64</a>
instructions to <a href="https://en.wikipedia.org/wiki/ARM_architecture_family">ARM</a>
instructions.</li>
</ul>
<p>Until recently, x86-64 was happily ruling the market (and still is by
orders of magnitude, let‚Äôs be honest), but since Apple dropped those
<strong>LIT</strong> üî• M1 chips that are basically killing the game in terms of
performance, things are changing.</p>
<p>This means that Mac software that was previously only targeting x86-64
now needs to ship <strong>universal</strong> binaries that support both x86-64 and
ARM if they want native performance.</p>
<p>But some vendors didn‚Äôt catch up yet, and in those cases, you‚Äôll need to
rely on Rosetta for the while being to run those programs.</p>
<p>That being said, there‚Äôs a thin chance that the program you install can
be repackaged in a way that can run natively, <em>without Rosetta</em>! In this
post we‚Äôll explore the Vanta agent, that claims it requires Rosetta, but
can easily be patched to run natively.</p>
<p>If you‚Äôre in luck, you might be able to apply this knowledge to other
macOS installers.</p>
<h2 id="the-case-of-the-vanta-agent" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#the-case-of-the-vanta-agent"><span>The case of the Vanta agent</span></a></h2>
<p>As part of a security policy, my employer requires me to install an
agent program on my work laptop. This program is provided by a company
called Vanta.</p>
<p>I won‚Äôt go in details about what is this program, but if you care, you
can checkout my <a href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html">detailed post on the topic</a>!</p>
<p>Anyways, they ship a <code>vanta.pkg</code> installer, that, when opened, claims to
be incompatible with the M1 architecture and requests to install
Rosetta. Not good.</p>
<h2 id="why-not-install-rosetta" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#why-not-install-rosetta"><span>Why not install Rosetta?</span></a></h2>
<p>I don‚Äôt like installing garbage on my computer, and when I‚Äôm required to
install garbage on my computer, I don‚Äôt like when on top of that the
garbage requires me to emulate another CPU architecture in order to run
it.</p>
<p>Also the challenge is fun, and a bit of software golfing here and there
is always enjoyable. I know it‚Äôs common practice to golf on production
code these days in the industry, but I personally prefer to keep it
contained and isolated. Golfing is a personal pleasure and, like
masturbating, you shouldn‚Äôt impose it on your colleagues.</p>
<h2 id="how-is-a-macos-installer-pkg-made" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#how-is-a-macos-installer-pkg-made"><span>How is a macOS installer (<code>.pkg</code>) made?</span></a></h2>
<p>Let‚Äôs ask <a href="https://linux.die.net/man/1/file"><code>file(1)</code></a> for some
information.</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">file vanta.pkg</span>
vanta.pkg: xar archive compressed TOC: 4838, SHA-1 checksum
</code></pre>
<p>It looks like we‚Äôre looking at a wild archive format, mostly
used on Darwin: <a href="https://linux.die.net/man/1/xar"><code>xar(1)</code></a>.
Its arguments are pretty similar to <a href="https://linux.die.net/man/1/tar"><code>tar(1)</code></a>.</p>
<p>Let‚Äôs make a directory to extract the archive in:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> vanta</span>
<span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> vanta</span>
<span class="hljs-meta prompt_">$ </span><span class="language-bash">xar -xf ../vanta.pkg</span>
<span class="hljs-meta prompt_">
$ </span><span class="language-bash"><span class="hljs-built_in">ls</span> -lh</span>
total 8
-rw-r--r--  1 val  staff   1.1K 13 Apr 16:50 Distribution
drwx------  3 val  staff    96B 31 Dec  1969 Resources
drwx------  6 val  staff   192B 31 Dec  1969 vanta-raw.pkg
</code></pre>
<p>So we have a file, <code>Distribution</code> and two directories, <code>Resources</code> and
<code>vanta-raw.pkg</code>. Let‚Äôs investigate.</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">file Distribution</span>
Distribution: XML 1.0 document text, ASCII text
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">vim Distribution</span>
</code></pre>
<p><code>Distribution</code> is a XML document, and when we look at it, we can see a
bunch of metadata for the macOS installer, where vendors can customize
background, logos, images and so on of the installer. In our case, it
also references the <code>vanta-raw.pkg</code> directory.</p>
<p>We‚Äôll see <a href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#preventing-the-rosetta-prompt">later</a> that‚Äôs also where we
can specify whether or not the package supports universal binaries!</p>
<p>But first, let‚Äôs inspect that <code>vanta-raw.pkg</code>.</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> vanta-raw.pkg</span>
<span class="hljs-meta prompt_">
$ </span><span class="language-bash"><span class="hljs-built_in">ls</span> -lh</span>
total 75880
-rw-r--r--  1 val  staff    42K  4 Jan 16:32 Bom
-rw-r--r--  1 val  staff   920B 13 Apr 16:50 PackageInfo
-rw-r--r--  1 val  staff    36M  4 Jan 16:32 Payload
-rw-r--r--  1 val  staff   1.2K  4 Jan 16:32 Scripts
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">file *</span>
Bom:         Mac OS X bill of materials (BOM) file
PackageInfo: XML 1.0 document text, ASCII text
Payload:     gzip compressed data, from Unix, original size modulo 2^32 104344576
Scripts:     gzip compressed data, from Unix, original size modulo 2^32 3072
</code></pre>
<p>So, another XML, two gzipped files, and a BOM file that we won‚Äôt care
about in the scope of this article.</p>
<p>The XML specifies ‚Äúbundles‚Äù as well as <code>preinstall</code> and <code>postinstall</code>
scripts. Nothing really interesting in there.</p>
<p>Let‚Äôs look at the gzipped data. This doesn‚Äôt tell us anything other than
the fact that it‚Äôs compressed with gzip‚Ä¶ but let‚Äôs ask <code>file</code> for its
opinion on the decompressed data.</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">gunzip &lt; Payload | file -</span>
/dev/stdin: ASCII cpio archive (pre-SVR4 or odc)
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">gunzip &lt; Scripts | file -</span>
/dev/stdin: ASCII cpio archive (pre-SVR4 or odc)
</code></pre>
<p>Another archive format? And another obscure (at least to me) one on top
of that? Alright.</p>
<p>According to <a href="https://linux.die.net/man/1/cpio"><code>cpio(1)</code></a>, we‚Äôll use
<code>cpio -i</code> to extract it (it knows to handle gzipped data so we don‚Äôt
need to uncompress it first).</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> PayloadOut</span>
<span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> PayloadOut</span>
<span class="hljs-meta prompt_">$ </span><span class="language-bash">cpio -i &lt; ../Payload</span>
203798 blocks
<span class="hljs-meta prompt_">
$ </span><span class="language-bash"><span class="hljs-built_in">ls</span> -lh</span>
total 0
drwxr-xr-x  3 val  staff    96B 13 Apr 18:40 Library
drwxr-xr-x  3 val  staff    96B 13 Apr 18:40 etc
drwxr-xr-x  3 val  staff    96B 13 Apr 18:40 usr
</code></pre>
<p>Looks like this is the tree of files to be copied to the target system
during the installation. We can do the same thing with <code>Scripts</code>:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> ScriptsOut</span>
<span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> ScriptsOut</span>
<span class="hljs-meta prompt_">$ </span><span class="language-bash">cpio -i &lt; ../Scripts</span>
6 blocks
<span class="hljs-meta prompt_">
$ </span><span class="language-bash"><span class="hljs-built_in">ls</span> -lh</span>
total 16
-rwxr-xr-x  1 val  staff   1.7K 13 Apr 18:40 postinstall
-rwxr-xr-x  1 val  staff   890B 13 Apr 18:40 preinstall
</code></pre>
<p>Those are two shell scripts that the installer runs respectively before
and after the installation.</p>
<p>We don‚Äôt need to mess with those in the scope of this article, but in
general, I like to read those scripts prior to running any macOS <code>.pkg</code>
installer to get an idea of what it‚Äôs going to do to my system.</p>
<h2 id="finding-the-non-arm-binaries" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#finding-the-non-arm-binaries"><span>Finding the non-ARM binaries</span></a></h2>
<p>Let‚Äôs go back to the extracted <code>Payload</code> and find all the executables in
there to see which ones are not ARM-compatible.</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">find . <span class="hljs-built_in">type</span> f -perm +111 | xargs file</span>
./usr/local/vanta/launcher:          Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64
- Mach-O 64-bit executable x86_64] [arm64]
./usr/local/vanta/launcher (for architecture x86_64):	Mach-O 64-bit executable x86_64
./usr/local/vanta/launcher (for architecture arm64):	Mach-O 64-bit executable arm64
./usr/local/vanta/osquery-vanta.ext: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64
- Mach-O 64-bit executable x86_64] [arm64]
./usr/local/vanta/osquery-vanta.ext (for architecture x86_64):	Mach-O 64-bit executable x86_64
./usr/local/vanta/osquery-vanta.ext (for architecture arm64):	Mach-O 64-bit executable arm64
./usr/local/vanta/autoupdater:       Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64
- Mach-O 64-bit executable x86_64] [arm64]
./usr/local/vanta/autoupdater (for architecture x86_64):	Mach-O 64-bit executable x86_64
./usr/local/vanta/autoupdater (for architecture arm64):	Mach-O 64-bit executable arm64
./usr/local/vanta/vanta-cli:         Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64
- Mach-O 64-bit executable x86_64] [arm64]
./usr/local/vanta/vanta-cli (for architecture x86_64):	Mach-O 64-bit executable x86_64
./usr/local/vanta/vanta-cli (for architecture arm64):	Mach-O 64-bit executable arm64
./usr/local/vanta/metalauncher:      Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64
- Mach-O 64-bit executable x86_64] [arm64]
./usr/local/vanta/metalauncher (for architecture x86_64):	Mach-O 64-bit executable x86_64
./usr/local/vanta/metalauncher (for architecture arm64):	Mach-O 64-bit executable arm64
./usr/local/vanta/osqueryd:          Mach-O 64-bit executable x86_64
</code></pre>
<div class="note">
<p><strong>Note:</strong> in GNU <code>find</code>, this would be <code>find . -type f -executable</code> but
BSD <code>find</code> doesn‚Äôt support <code>-executable</code>. Instead we can pass <code>-perm</code>
with an expression for matching the permission bits, where <code>+</code> means
we‚Äôre passing a bitmask where at least one of the bits must match, and
<code>111</code> is the bitmask to match executable permissions (for owner, group
and others).</p>
<p>See <a href="https://stackoverflow.com/a/4458361">this thread</a> for details.</p>
</div>
<p>By scanning this output we see that <code>usr/local/vanta/osqueryd</code> isn‚Äôt
compatible with ARM. We can sort through this output to confirm we
didn‚Äôt miss anything (by printing only the files where <code>file(1)</code> didn‚Äôt
give the string <code>universal</code>):</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> $(find . -<span class="hljs-built_in">type</span> f -perm +111 | grep -v <span class="hljs-string">&#x27;\.app&#x27;</span>); <span class="hljs-keyword">do</span> file <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> | grep -q universal || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span>; <span class="hljs-keyword">done</span></span>
./usr/local/vanta/osqueryd
</code></pre>
<p>So we identified our culprit.</p>
<p>If this binary wasn‚Äôt essential to the program (or what we specifically
want to do with it), we could just ignore it and jump to the <a href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#preventing-the-rosetta-prompt">last step</a>
to prevent the installer from prompting to install Rosetta.</p>
<h2 id="replacing-the-binary" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#replacing-the-binary"><span>Replacing the binary</span></a></h2>
<p>Because in our case it‚Äôs actually an essential binary, we need to
replace it with an ARM-compatible version. This is not always going to
be possible, in which case you might have to resort to Rosetta (or
deciding to not install this package after all).</p>
<p>For this specific program, we‚Äôre in luck because
<a href="https://github.com/osquery/osquery">osquery</a> is actually an
open source program!</p>
<p>This means that even if they don‚Äôt provide an ARM version, hopefully
with little work we can compile from source for ARM and use that for our
package.</p>
<p>But for us it‚Äôs even better, because they released <a href="https://github.com/osquery/osquery/releases/tag/5.2.2">version 5.2.2</a>
a few months ago with Apple silicon support. Dope!</p>
<p>So we can just fetch <a href="https://github.com/osquery/osquery/releases/download/5.2.2/osqueryd-macos-bare-5.2.2.tar.gz">the <code>osqueryd</code> binary from this release</a>
and replace the one from the original Vanta package.</p>
<p>In my case I <a href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#installing-and-running-vanta-without-root-privilege">did a few</a>
<a href="https://www.codejam.info/2022/04/vanta-agent-m1-mac-without-rosetta.html#spying-on-the-spyware-and-monitoring-its-network-traffic">other tweaks</a>
because I didn‚Äôt want to give this program <code>root</code> privileges and I also
wanted to monitor its HTTPS traffic, but that‚Äôs off-topic for this
article.</p>
<h2 id="preventing-the-rosetta-prompt" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#preventing-the-rosetta-prompt"><span>Preventing the Rosetta prompt</span></a></h2>
<p>Or in other words, marking the package as ARM-compatible.</p>
<p>If we were to <a href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#repackaging-the-installer">repackage the installer</a>
right now, even though all the binaries in the payload are
ARM-compatible, we would still be greeted by a prompt to install Rosetta
when running it!</p>
<p>We can find the solution as part of <a href="https://stackoverflow.com/a/11487658">this answer</a>
(the ‚ÄúApple silicon‚Äù part). By adding the following line in the
<code>Distribution</code> XML file inside our package, we claim that the installer
supports ARM64 natively and hence doesn‚Äôt need Rosetta:</p>
<pre><code class="hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">options</span> <span class="hljs-attr">hostArchitectures</span>=<span class="hljs-string">&quot;arm64,x86_64&quot;</span> /&gt;</span>
</code></pre>
<p>It can be added anywhere inside the <code>installer-gui-script</code> node.</p>
<h2 id="repackaging-the-installer" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#repackaging-the-installer"><span>Repackaging the installer</span></a></h2>
<p>Now we made sure all the binaries we needed are compatible with ARM,
and the <code>Distribution</code> file reflects that, we‚Äôre ready to repackage the
installer!</p>
<p>This is done in two steps.</p>
<ol>
<li>Recreate the <code>Payload</code> cpio archive from our updated content.</li>
<li>Recreate the <code>.pkg</code> archive containing the whole structure.</li>
</ol>
<p>All the necessary instructions are in <a href="https://stackoverflow.com/questions/11298855/how-to-unpack-and-pack-pkg-file">this thread</a>
but I‚Äôll detail the specific ones I used below.</p>
<h3 id="the-payload" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#the-payload"><span>The payload</span></a></h3>
<p>For the <code>Payload</code>, that we extracted and updated in a temporary
<code>PayloadOut</code> directory next to it, we‚Äôll run the following command from
the <code>PayloadOut</code> directory:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">find . | cpio -oz --owner 0:80 &gt; ../Payload</span>
203798 blocks
</code></pre>
<p>Here, <code>cpio -o</code> archives the file list from <code>stdin</code> and outputs the
archive in <code>stdout</code>. <code>-z</code> was added for built-in gzip compression (could
also be achieved by piping the output to <code>gzip -c</code>). <code>--owner 0:80</code> is
used to archive the files with <code>root:admin</code> ownership (instead of my own
user and group), which was necessary for this particular program.</p>
<div class="note">
<p><strong>Note:</strong> there‚Äôs also a <code>Bom</code> file next to our <code>Payload</code> and <code>Scripts</code>
archives, which is effectively a BOM (bill of materials), containing a
bunch of information about the files in the package.</p>
<p>In my experience I didn‚Äôt need to touch this file despite some of the
contents of the package changing, but your mileage may vary, in which
case you might want to regenerate the BOM from our extracted
<code>PayloadOut</code> directory by running <code>mkbom PayloadOut Bom</code>.</p>
</div>
<h3 id="the-package" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#the-package"><span>The package</span></a></h3>
<p>Before repackaging don‚Äôt forget to remove our temporary <code>PayloadOut</code> and
<code>ScriptsOut</code> directories.</p>
<p>Then, from the root of the extracted package, we can run the following
command to create a new package:</p>
<pre><code class="hljs language-sh">xar --compression none -cf ../vanta-new.pkg .
</code></pre>
<p>The <code>--compression none</code> part turned out to be important because if the
XAR archive is compressed, we encounter the following error during the
installation:</p>
<pre><code class="hljs">Error Domain=BOMCopierFatalError Code=1 &quot;cpio read error: bad file format&quot;
</code></pre>
<p>This error is kinda misleading because it points to the cpio archive
while the issue really is with the top-level XAR archive.</p>
<p>It‚Äôs even more confusing because the macOS installer was able to extract
the XAR archive to read the metadata from it (and can happily show files
of the nested <code>Payload</code> archive), yet somehow fails to proceed with
the rest of the installation because the archive it‚Äôs already reading
from is compressed?</p>
<p>I‚Äôm not gonna try to understand why that is, but just know that
<code>--compression none</code> is necessary for this to work!</p>
<h2 id="what-about-the-package-signature" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#what-about-the-package-signature"><span>What about the package signature?</span></a></h2>
<p>You might have noticed that we didn‚Äôt sign that newly created package.</p>
<p>It turns out that this is fine. Sure, we‚Äôre now lacking the lock icon on
the top right corner of the installer, but for our own usage, this isn‚Äôt
a big deal. It doesn‚Äôt prevent the installation from completing
whatsoever.</p>
<p>So how come we get a security warning when we try to run an unsigned
installer downloaded from the internet? That‚Äôs because Apple flags
downloaded files as quarantined. You can see it by running e.g. <code>xattr vanta.pkg</code> and seeing it includes <code>com.apple.quarantine</code>.</p>
<p>When opening a quarantined installer, macOS will check for a valid
signature and print a security warning otherwise.</p>
<p>But the archive we just created on our own is not quarantined, because
we didn‚Äôt download it, so macOS is happy to let us run it without
signature, which is pretty useful here.</p>
<h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/repackage-macos-app-m1-support-without-rosetta.html#conclusion"><span>Conclusion</span></a></h2>
<p>Was it worth going through all that trouble to keep running my software
as natively as possible? Definitely not.</p>
<p>Did I learn a lot about macOS installers in the process, and how they
handle universal binaries? Hell yeah.</p>
<p>So in the end, I‚Äôm happy I dug through this, and if you ended up on this
article somehow, I hope this was useful to you too!</p>
<p>Wishing you a happy Rosetta-free Mac!</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1520527092219355138">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Run macOS inside Docker on Linux, with Wayland</title>
    <link href="https://www.codejam.info/2022/04/macos-docker-linux-wayland.html" />
    <id>https://www.codejam.info/2022/04/macos-docker-linux-wayland.html</id>
    <updated>2022-04-13T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>This is gonna be a short one. There‚Äôs this fucking fantastic software
called <a href="https://github.com/sickcodes/Docker-OSX">Docker-OSX</a> that
lets you run a macOS VM on Linux out of the box, just like that. ‚ú®</p>
<p>Running macOS on a non-Apple hardware is already
<a href="https://www.codejam.info/2019/03/macos-high-sierra-msi-h110m-pro-d-skylake-nvidia-pascal.html">not a</a>
<a href="https://www.codejam.info/2021/11/yearly-hackintosh-upgrade-macos-monterey-with-opencore.html">trivial task</a>,
even though <a href="https://github.com/acidanthera/OpenCorePkg">OpenCore</a> and
the (also fucking fantastic) <a href="https://dortania.github.io/OpenCore-Install-Guide/">Dortania guide</a>
help greatly. Let alone running it inside a VM.</p>
<p>Docker-OSX is based on <a href="https://github.com/kholia/osx-kvm">OSX-KVM</a> as
well as <a href="https://github.com/thenickdude/KVM-Opencore/">KVM-OpenCore</a>,
and provides a Docker container that‚Äôs preconfigured to run the macOS
installer of your choice inside a KVM virtual machine that‚Äôs already
set up to support macOS.</p>
<p>With some Docker volume mounts magic, it can show the KVM window
directly on your X11 display, despite you not installing KVM on your
main system and configuring anything. Sweet.</p>
<p>The commands to run various macOS versions are directly <a href="https://github.com/sickcodes/Docker-OSX#quick-start-docker-osx">in the readme</a>
and work out of the box! Example for Monterey:</p>
<pre><code class="hljs language-sh">docker run -it \
    --device /dev/kvm \
    -p 50922:10022 \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e <span class="hljs-string">&quot;DISPLAY=<span class="hljs-variable">${DISPLAY:-:0.0}</span>&quot;</span> \
    -e GENERATE_UNIQUE=<span class="hljs-literal">true</span> \
    -e MASTER_PLIST_URL=<span class="hljs-string">&#x27;https://raw.githubusercontent.com/sickcodes/osx-serial-generator/master/config-custom.plist&#x27;</span> \
    sickcodes/docker-osx:monterey
</code></pre>
<h2 id="making-it-work-on-wayland" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/macos-docker-linux-wayland.html#making-it-work-on-wayland"><span>Making it work on Wayland</span></a></h2>
<p>I recently moved to Wayland, so setting <code>DISPLAY=:0.0</code> and mount binding
<code>/tmp/.X11-unix</code> is not gonna do much. üò¨</p>
<p>At the time of writing, there‚Äôs no official instructions in the readme
to run with Wayland, but the task turned out to be fairly easy!</p>
<p>Luckily I‚Äôm not the first one to try to do that, and there‚Äôs already two
<a href="https://github.com/sickcodes/Docker-OSX/issues/410">open</a>
<a href="https://github.com/sickcodes/Docker-OSX/issues/419">issues</a> on the
topic! The second one in particular contains a
<a href="https://github.com/sickcodes/Docker-OSX/issues/419#issuecomment-1011401905">solution</a>,
essentially replacing the X11-specific volume and environment variable
by Wayland equivalents (which I would definitely not have guessed easily üòÇ).</p>
<p>Once adapted for Monterey, the command is the following:</p>
<pre><code class="hljs language-sh">docker run -it \
    --device /dev/kvm \
    -p 50922:10022 \
    -e XDG_RUNTIME_DIR=/tmp \
    -e WAYLAND_DISPLAY=<span class="hljs-variable">$WAYLAND_DISPLAY</span> \
    -v <span class="hljs-variable">$XDG_RUNTIME_DIR</span>/<span class="hljs-variable">$WAYLAND_DISPLAY</span>:/tmp/<span class="hljs-variable">$WAYLAND_DISPLAY</span>  \
    -e GENERATE_UNIQUE=<span class="hljs-literal">true</span> \
    -e MASTER_PLIST_URL=<span class="hljs-string">&#x27;https://raw.githubusercontent.com/sickcodes/osx-serial-generator/master/config-custom.plist&#x27;</span> \
    sickcodes/docker-osx:monterey
</code></pre>
<p>The original comment specified a number of extra environment variables
but they didn‚Äôt appear to be needed for me.</p>
<p>And that‚Äôs it! Happy hacking on macOS in a VM! üéâ</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1514368088531247108">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Make floats and lists collaborate üôà</title>
    <link href="https://www.codejam.info/2022/04/make-floats-and-lists-collaborate.html" />
    <id>https://www.codejam.info/2022/04/make-floats-and-lists-collaborate.html</id>
    <updated>2022-04-11T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>Am I the only one struggling to get lists and other styled elements to
render properly next to a float?</p>
<p>At least, it definitely doesn‚Äôt work well out of the box. Let‚Äôs start
from a generic browser style sheet context (a HTML file without any CSS
added), or <a href="https://necolas.github.io/normalize.css/">Normalize.css</a>.</p>
<h2 id="the-problem" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/make-floats-and-lists-collaborate.html#the-problem"><span>The problem</span></a></h2>
<pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Hello<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>
</code></pre>
<pre><code class="hljs language-css"><span class="hljs-selector-class">.square</span> {
    <span class="hljs-attribute">float</span>: left;
    <span class="hljs-attribute">width</span>: <span class="hljs-number">6em</span>;
    <span class="hljs-attribute">height</span>: <span class="hljs-number">6em</span>;
    <span class="hljs-attribute">background</span>: <span class="hljs-number">0366</span>d6;
}
</code></pre>
<iframe src="https://www.codejam.info/img/2022/04/float-demo/example-0.html" width="100%"></iframe>
<p>This is not great. The left padding of the <code>&lt;ul&gt;</code> overlaps with the
square, and so does the bullet point.</p>
<p>The only way I‚Äôm aware of to fix this in a normal document flow (e.g.
not doing a very custom thing with Flexbox or grids) is to set
<code>overflow: hidden</code> to the <code>&lt;ul&gt;</code> (or on a parent block that‚Äôs also being
pushed by the float):</p>
<pre><code class="hljs language-css"><span class="hljs-selector-tag">ul</span> {
    <span class="hljs-attribute">overflow</span>: hidden;
}
</code></pre>
<iframe src="https://www.codejam.info/img/2022/04/float-demo/example-1.html" width="100%"></iframe>
<p>Better. Let‚Äôs add a paragraph <em>before</em> the square and <em>after</em> the <code>&lt;ul&gt;</code>
and see what happens.</p>
<pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Paragraph<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Hello<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Paragraph<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
</code></pre>
<iframe src="https://www.codejam.info/img/2022/04/float-demo/example-2.html" width="100%"></iframe>
<p>So far so good.</p>
<h2 id="breaking-it-again" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/make-floats-and-lists-collaborate.html#breaking-it-again"><span>Breaking it again</span></a></h2>
<p>Now let‚Äôs assume we have paragraphs <em>inside</em> our list items (yes, this
happens). You also get a similar problem with <code>&lt;blockquote&gt;</code>s or any
other element where you might want to have a left border and padding,
and that contains paragraphs or anything with a vertical margin.</p>
<pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Paragraph<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello from a paragraph<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Paragraph<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
</code></pre>
<iframe src="https://www.codejam.info/img/2022/04/float-demo/example-3.html" width="100%"></iframe>
<p>Subtle yet important thing to notice: the vertical margin from the
list paragraph now don‚Äôt merge with the adjacent margins because of our
<code>overflow: hidden</code> hack! So we have double the margin before and after
the list. Not good.</p>
<p>But what is this behavior in the first place? Meet <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing">margin collapsing</a>.
This concept is is very well defined by <a href="https://css-tricks.com/what-you-should-know-about-collapsing-margins/">CSS-Tricks</a>:</p>
<blockquote>
<p>Collapsing margins happen when two vertical margins come in contact
with one another. If one margin is greater than the other, then that
margin overrides the other, leaving one margin.</p>
</blockquote>
<p>So by using <code>overflow: hidden</code>, we break margin collapsing.</p>
<h2 id="avoiding-collapsing-altogether" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/make-floats-and-lists-collaborate.html#avoiding-collapsing-altogether"><span>Avoiding collapsing altogether</span></a></h2>
<p>It‚Äôs quite common to use something like <code>margin-top: 0</code> and
<code>margin-bottom: 1em</code> on all content elements (or the other way
around) to avoid relying on (and dealing with) margin collapsing.</p>
<p><a href="https://twitter.com/valeriangalliat/status/1512869222111756292">I ran a poll on Twitter</a>
that got 74 answers. A majority of y‚Äôall use this technique to avoid
margin collapsing!</p>
<table>
  <tr>
    <td><code>p { margin: 1em 0; }</code>
    <td>37.8%</td>
  </tr>
  <tr>
    <td><code>p { margin-bottom: 1em; }</code>
    <td>62.2%</td>
  </tr>
</table>
<p>We can try this and see if it helps with our problem.</p>
<pre><code class="hljs language-css"><span class="hljs-selector-tag">p</span>, <span class="hljs-selector-tag">ul</span> {
    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0</span>;
}
</code></pre>
<iframe src="https://www.codejam.info/img/2022/04/float-demo/example-4.html" width="100%"></iframe>
<p>It‚Äôs better. We don‚Äôt have double the spacing anymore above the <code>&lt;ul&gt;</code>,
but we still have the problem with the <code>margin-bottom</code> of the <code>&lt;ul&gt;</code> not
collapsing with its inner paragraph.</p>
<p>What we can do though is to set <code>overflow: hidden</code> on a wrapper element
instead of the <code>&lt;ul&gt;</code> directly, then this should let the inner paragraph
collapse with it‚Äôs parent <code>&lt;ul&gt;</code>'s <code>margin-bottom</code>:</p>
<pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Paragraph<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;square&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-hack&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello from a paragraph<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Paragraph<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
</code></pre>
<pre><code class="hljs language-css"><span class="hljs-selector-class">.float-hack</span> {
    <span class="hljs-attribute">overflow</span>: hidden;
}
</code></pre>
<iframe src="https://www.codejam.info/img/2022/04/float-demo/example-5.html" width="100%"></iframe>
<p>Sweet, that works like a charm!</p>
<p>That being said, it works especially well because we decided to kill the
<code>margin-top</code> of content elements, but if you want to remove the
<code>margin-bottom</code> instead and keep the <code>margin-top</code>, it‚Äôs a different
story:</p>
<pre><code class="hljs language-css"><span class="hljs-selector-tag">p</span>, <span class="hljs-selector-tag">ul</span> {
    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">0</span>;
}
</code></pre>
<iframe src="https://www.codejam.info/img/2022/04/float-demo/example-6.html" width="100%"></iframe>
<p>So keep that in mind of you want to drop margin collapsing, the margin
you kill has an importance!</p>
<h2 id="a-solution-to-keep-collapsing" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/make-floats-and-lists-collaborate.html#a-solution-to-keep-collapsing"><span>A solution to keep collapsing?</span></a></h2>
<p>The simplicity of the previous solution pretty much convinced me to use
this pattern on my blog. But for some reason you might want to keep
relying on margin collapsing and still need to fix this spacing issues
with floats. Let‚Äôs find a way.</p>
<p>Since we need to combat the fact that <code>overflow: hidden</code> prevents our
vertical margins from collapsing, an option is to set <code>margin-top: 0</code>
<strong>recursively</strong> on all the first children of the <code>overflow: hidden</code> element,
and <code>margin-bottom: 0</code> on all the last children.</p>
<p>Why <em>recursively</em>? Because any element in the tree of direct first
children could set a <code>margin-top</code> that we want to cancel (and similarly
for <code>margin-bottom</code> and the last children tree).</p>
<p>But <a href="https://stackoverflow.com/questions/12477272/select-recursive-last-child-possible">we can‚Äôt recursively target all the first or last children of an element</a>!</p>
<p>So a solution would be to write something like this (relying on the
<code>float-hack</code> class we introduced earlier:</p>
<pre><code class="hljs language-css"><span class="hljs-selector-class">.float-hack</span> {
    <span class="hljs-attribute">overflow</span>: hidden;
}

<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:first</span>-child,
<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child,
<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child,
<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child,
<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child &gt; <span class="hljs-selector-pseudo">:first</span>-child {
    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">0</span>;
}

<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:last-child</span>,
<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span>,
<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span>,
<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span>,
<span class="hljs-selector-class">.float-hack</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> &gt; <span class="hljs-selector-pseudo">:last-child</span> {
    <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">0</span>;
}
</code></pre>
<p>This should be good enough for most simple cases. You can even have a
paragraph inside a <code>&lt;blockquote&gt;</code>, itself inside a list item!</p>
<pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-hack&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">blockquote</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>This is a quote<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">blockquote</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>
<p>Or a nested list, which reach the same level of nesting:</p>
<pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;float-hack&quot;</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>
      <span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span>
        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>Nested list item<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
      <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>
    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>
<p>Maybe don‚Äôt add a <code>&lt;blockquote&gt;</code> with paragraphs inside this nested list
item or you might want to add a few recursion levels to our earlier CSS
rule. üòÇ</p>
<div class="note">
<p><strong>Note:</strong> this isn‚Äôt a complete fix as it won‚Äôt behave properly if the
collapsing margins are not equal.</p>
<p>The engine normally keeps the greater margin, but here we‚Äôll always nuke
the margin of the first and last items of our <code>float-hack</code> element.</p>
</div>
<h2 id="wrapping-up" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/make-floats-and-lists-collaborate.html#wrapping-up"><span>Wrapping up</span></a></h2>
<p>And there you go! Two solutions for the price of one:</p>
<ol>
<li>Prevent margin collapsing altogether by only applying a
<code>margin-bottom</code> and setting <code>margin-top: 0</code> on all content elements.</li>
<li>Recursively target the first and last children of the <code>overflow: hidden</code>
element to cancel their margin.</li>
</ol>
<p>Which one is your favorite?</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1513692138776801287">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>How can rsync work on a host without shell access? ü§î</title>
    <link href="https://www.codejam.info/2022/04/rsync-without-shell-access.html" />
    <id>https://www.codejam.info/2022/04/rsync-without-shell-access.html</id>
    <updated>2022-04-09T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<h2 id="tldr" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/rsync-without-shell-access.html#tldr"><span>TLDR</span></a></h2>
<p>It does not. But sometimes, hosting providers use a trick so that you
don‚Äôt have shell access but rsync thinks it does‚Ä¶</p>
<h2 id="the-case-of-a-file-hosting-provider" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/rsync-without-shell-access.html#the-case-of-a-file-hosting-provider"><span>The case of a file hosting provider</span></a></h2>
<p>I use a <a href="https://www.hetzner.com/storage/storage-box?country=us">Hetzner storage box</a>
for my backups. They have a super competitive offer that can get you 1
TB of storage for ‚Ç¨2.90 per month, or 5 TB for ‚Ç¨9.90!</p>
<p>On their <a href="https://www.hetzner.com/storage/storage-box?country=us">features page</a>
they list they support a number of protocols, including <strong>SFTP, SCP,
BorgBackup, and rsync over SSH</strong>.</p>
<p>All of those protocols happen over a SSH connection, yet Hetzner doesn‚Äôt
give us SSH access to the box:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh u123456@u123456.your-storagebox.de</span>
PTY allocation request failed on channel 0

+-------------------------------------------------------------------------------+
| Your authentication works but we do not support interactive logins.           |
| For more information on how to access your Storage Box please check our Docs: |
| https://docs.hetzner.com/robot/storage-box/access/access-ssh-rsync-borg       |
+-------------------------------------------------------------------------------+

Connection to u123456.your-storagebox.de closed.
</code></pre>
<p>Let‚Äôs assume the following <code>~/.ssh/config</code> for further commands for
simplicity, so that we can just <code>ssh hetzner</code>:</p>
<pre><code class="hljs">Host hetzner
    HostName u123456.your-storagebox.de
    User u123456
</code></pre>
<p>While interactive SSH is not allowed, we can try running a command
directly:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh hetzner <span class="hljs-built_in">ls</span></span>
file1
file2
file3
</code></pre>
<p>Interesting. What other commands do they allow?</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh hetzner <span class="hljs-built_in">cp</span> file3 file4</span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner <span class="hljs-built_in">cat</span> file1</span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner <span class="hljs-built_in">du</span> -sh .</span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner <span class="hljs-built_in">pwd</span></span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner <span class="hljs-built_in">whoami</span></span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner <span class="hljs-built_in">rm</span> file3</span>
Command not found
</code></pre>
<p>Well, not much. So by what sorcery are SFTP, SCP, BorgBackup and rsync
able to work over this connection?</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sftp hetzner</span>
Connected to hetzner.
<span class="hljs-meta prompt_">sftp&gt;</span><span class="language-bash">
</span><span class="hljs-meta prompt_">
$ </span><span class="language-bash">scp file4 hetzner:</span>
file4
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">rsync -v file5 hetnzer:</span>
file5
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner <span class="hljs-built_in">ls</span> file4 file5</span>
file4
file5
</code></pre>
<p>To understand, let‚Äôs dig in the internals of SFTP, SCP, BorgBackup and
rsync.</p>
<h2 id="sftp" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/rsync-without-shell-access.html#sftp"><span>SFTP</span></a></h2>
<p>SFTP is actually the odd one in the room. But we‚Äôll start with it
nevertheless.</p>
<p>Using <code>-v</code> to enable debug output gives one interesting line near the
end of the log:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sftp -v hetzner</span>
...
debug1: Sending subsystem: sftp
...
</code></pre>
<p>It looks like we‚Äôre dealing with something called SSH subsystems. A good
way to find more about them is to search
<a href="https://serverfault.com/questions/354615/allow-sftp-but-disallow-ssh">how to enable SFTP but disallow SSH</a>.</p>
<p>Here, we meet our SSH server subsystem again, which is typically
configured on the server as:</p>
<pre><code class="hljs language-conf">Subsystem sftp internal-sftp
</code></pre>
<p>From the <a href="https://linux.die.net/man/1/ssh"><code>ssh(1)</code></a> man page, we can
see that <code>ssh -s</code> allows to pass a subsystem where we would normally
pass a command, e.g:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh hetzner -s sftp</span>
</code></pre>
<p>This command hangs, meanings the remote server is waiting for SFTP
commands. Since it‚Äôs a binary protocol, we won‚Äôt be able to play with it
directly, but this is the connection over which a normal SFTP client
would be able to do its magic. Sweet!</p>
<h2 id="scp" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/rsync-without-shell-access.html#scp"><span>SCP</span></a></h2>
<p>Let‚Äôs use the verbose/debug mode trick like we did previously with SFTP:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">scp -v file4 hetzner:</span>
...
debug1: Sending command: scp -v -t .
...
</code></pre>
<p>Here, the relevant part of the debug output is where <code>scp</code> sends the
remote command <code>scp -v -t .</code>.</p>
<p><code>-v</code> is for the verbose mode we specified, but if we look at the
<a href="https://linux.die.net/man/1/scp"><code>scp(1)</code></a> man page, there‚Äôs nothing
for <code>-t</code>.</p>
<p>We can look at
<a href="https://github.com/openssh/openssh-portable/blob/90452c8b69d065b7c7c285ff78b81418a75bcd76/scp.c#L575">the source code</a>
where they parse the command line arguments:</p>
<pre><code class="hljs language-c"><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;f&#x27;</span>:    <span class="hljs-comment">/* &quot;from&quot; */</span>
    iamremote = <span class="hljs-number">1</span>;
    fflag = <span class="hljs-number">1</span>;
    <span class="hljs-keyword">break</span>;
<span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;t&#x27;</span>:    <span class="hljs-comment">/* &quot;to&quot; */</span>
    iamremote = <span class="hljs-number">1</span>;
    tflag = <span class="hljs-number">1</span>;
</code></pre>
<p>So we learn that <code>-f</code> or <code>-t</code> are used internally to trigger the remote
mode. Because in our case we were sending a file to the remote host, we
entered <code>-t</code> mode, but if we were downloading a file form the host, we
would likely see <code>-f</code>. Let‚Äôs try:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">scp -v hetzner:file4 .</span>
...
debug1: Sending command: scp -v -f file4
...
</code></pre>
<p>So it‚Äôs through invoking <code>scp</code> on the remote host over SSH that our
local <code>scp</code> is able to transfer files. But how is that possible? We saw
earlier that basically every command but <code>ls</code> was returning ‚Äúcommand not
found‚Äù! And we can confirm <code>scp</code> is not present on the remote host:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh hetzner scp</span>
Command not found
</code></pre>
<p>Or is it? Let‚Äôs try the full command that <code>scp</code> would normally run on
the remote host‚Ä¶</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh hetzner scp -t .</span>
<span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh hetzner scp -f file4</span>
</code></pre>
<p>Both those commands hang, meaning that Hetzner actually ran them, and we
now have a communication channel with the remote <code>scp</code> process!</p>
<p>So Hetzner disallowed us to run <code>scp</code> directly on the remote host, but
they whitelisted the specific arguments that <code>scp</code> would internally pass
to start the remote process. Smart.</p>
<h2 id="borgbackup" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/rsync-without-shell-access.html#borgbackup"><span>BorgBackup</span></a></h2>
<p>Now we know the pattern, it‚Äôs easy to confirm that they do the same
whitelisting for BorgBackup. We can see that <a href="https://borgbackup.readthedocs.io/en/stable/usage/serve.html"><code>borg serve</code></a>
is used to start the remote process.</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh hetzner borg</span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner borg --<span class="hljs-built_in">help</span></span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner borg serve</span>
</code></pre>
<p>The last command hangs, and again we exposed the way Borg internally
opens a communication channel with a Borg implementation on the remote
server!</p>
<h2 id="rsync" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/rsync-without-shell-access.html#rsync"><span>rsync</span></a></h2>
<p>One more time, we leverage the verbose mode, this time with <code>-vv</code> to get
extra debug output, to see what rsync does internally:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">rsync -vv file5 hetzner:</span>
opening connection using: ssh hetzner rsync --server -vve.LsfxCIvu . .  (7 args)
delta-transmission enabled
file5
...
</code></pre>
<p>Sweet. Let‚Äôs try to run this manually:</p>
<pre><code class="hljs language-console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">ssh hetzner rsync</span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner rsync --<span class="hljs-built_in">help</span></span>
Command not found
<span class="hljs-meta prompt_">
$ </span><span class="language-bash">ssh hetzner rsync --server -vve.LsfxCIvu . .</span>
</code></pre>
<p>And again, Hetzner allowed the last command and we have an open
communication channel with the remote rsync process!</p>
<h3 id="digging-deeper-just-for-fun" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/rsync-without-shell-access.html#digging-deeper-just-for-fun"><span>Digging deeper just for fun</span></a></h3>
<p>If you‚Äôre curious, there‚Äôs <a href="https://serverfault.com/questions/793669/what-is-the-rsync-option-logdtprze-ilsf-for/1096808">a Server Fault question</a>
about the meaning of the <code>-vve.LsfxCIvu</code> part.</p>
<p>The answers there were a pretty good start, but there was something
fishy and unexplained about the <code>.</code> in the middle, and I wasn‚Äôt quite
satisfied. So <a href="https://serverfault.com/a/1096808">I dug I bit more</a>.</p>
<p>In the case of <code>-vve.LsfxCIvu</code>, it‚Äôs actually equivalent to <code>-v -v -e '.LsfxCIvu'</code>,
because of the way <code>popt(3)</code>'s <code>POPT_ARG_STRING</code> parses command line
options (the library used by rsync to parse options), which is quite a
common behavior for Unix commands short options.</p>
<p>The trick is that <code>-e</code> is interpreted differently when we‚Äôre in
<code>--server</code> mode, in a way that‚Äôs not related to the <code>-e</code> client option
from the man page, that is normally the short version of <code>--rsh</code>,
allowing to specify the remote shell to use.</p>
<p>Setting <code>-e</code> or <code>--rsh</code> will have the options parser populate the
<code>shell_cmd</code> variable, but <a href="https://github.com/WayneD/rsync/blob/13c4019e94015b234697c75d9d3624862e962d3c/compat.c#L160">they hijack it in server mode</a>
to populate a <code>client_info</code> variable instead, which is used
<a href="https://github.com/WayneD/rsync/blob/13c4019e94015b234697c75d9d3624862e962d3c/compat.c#L134">differently</a>,
to define a number of internal protocol compatibility options.</p>
<p>We can look at <a href="https://github.com/WayneD/rsync/blob/f44e76b65c5819edb1a5b2fbbe732d5d214b35de/options.c#L2951">the code that creates the value for the <code>-e</code> option</a>
to get an idea of what those options do. In my case:</p>
<ul>
<li><code>L</code>: symlink time-setting support</li>
<li><code>s</code>: symlink iconv translation support</li>
<li><code>f</code>: <code>flist</code> I/O-error safety support</li>
<li><code>x</code>: <code>xattr</code> hardlink optimization not desired</li>
<li><code>C</code>: support checksum seed order fix</li>
<li><code>I</code>: support <code>inplace_partial</code> behavior</li>
<li><code>v</code>: use <code>varint</code> for <code>flist</code> &amp; compat flags; negotiate checksum</li>
<li><code>u</code>: include name of <code>uid 0</code> &amp; <code>gid 0</code> in the <code>id</code> map</li>
</ul>
<p>I didn‚Äôt really need to know that <code>-vve.LsfxCIvu</code> means
<code>-v -v -e '.LsfxCIvu'</code> and not <code>-v -v -e . -L -s -f -x -C -I -v -u</code>? No.
Does this makes my life any better? Not really. But there‚Äôs an invisible
force that pushes me to spend ridiculous amounts of time to make sense
of this kind of things.</p>
<h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/rsync-without-shell-access.html#conclusion"><span>Conclusion</span></a></h2>
<p>SFTP, SCP, BorgBackup and rsync all work on a client/server model, where
the command is run both on the client <em>and</em> the server, and communicate
together over SSH. It means that the command needs to be installed on
the remote server as well, and allowed to be run over SSH.</p>
<p>rsync and BorgBackup can achieve great performance to synchronize files
on a storage server like Hetzner, because despite not having shell
access on that server, the specific commands used by those tools to
start a remote process are whitelisted.</p>
<p>For other tools like <a href="https://restic.net/">restic</a>, because Hetzner
doesn‚Äôt support their custom server protocol, they are constrained to
use the more generic (and limited) commands of SFTP, which doesn‚Äôt allow
optimal performance.</p>
<p>So if you were wondering how all those tools can run code on your
storage box despite you being denied shell access, now you know!</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1512854917702164494">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Make a bootable Windows USB from Linux in 2022</title>
    <link href="https://www.codejam.info/2022/04/bootable-windows-usb-from-linux.html" />
    <id>https://www.codejam.info/2022/04/bootable-windows-usb-from-linux.html</id>
    <updated>2022-04-09T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>In the Linux world we‚Äôre used to <code>dd if=some-image.iso of=/dev/some-usb-key bs=4M</code>
and it Just Works‚Ñ¢.</p>
<p>It is because most Linux ISO <a href="https://askubuntu.com/a/1174287">are hybrid</a>
in a way where the same ISO can be used on a DVD, USB or SD card. It‚Äôs
not the case for the Windows ISO.</p>
<p>From Windows, <a href="https://rufus.ie/">Rufus</a> is the easiest solution, but if
I‚Äôm making a bootable Windows USB, maybe it‚Äôs because I don‚Äôt have a
Windows installation handy at the moment. üò¨</p>
<h2 id="the-traditional-solution" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/bootable-windows-usb-from-linux.html#the-traditional-solution"><span>The traditional solution</span></a></h2>
<p>Before Windows shipped ISOs with files larger than 4 GB, making a
bootable Windows USB for EFI was as simple as format the key as FAT32,
and just copying over the contents of the ISO to it. Example:</p>
<pre><code class="hljs language-sh">fdisk /dev/sdX <span class="hljs-comment"># Make a single partition for the whole drive</span>
mkfs.fat -F32 /dev/sdX1 <span class="hljs-comment"># Format as FAT32</span>

<span class="hljs-built_in">mkdir</span> usb windows <span class="hljs-comment"># Make some mount points</span>
mount /dev/sdX1 usb
mount windows.iso windows

<span class="hljs-built_in">cp</span> -rv windows/* usb <span class="hljs-comment"># Copy contents</span>

umount windows
umount usb
</code></pre>
<p>If your motherboard‚Äôs EFI somehow supports exFAT out of the box, you can
replace <code>mkfs.fat</code> by <code>mkfs.exfat</code> in the above script and that should
work for you with files larger than 4 GB.</p>
<p>This didn‚Äôt work on any of the PCs I tried this on, but according to
<a href="https://www.tonymacx86.com/threads/guide-how-to-create-bootable-windows-usb-install-media-in-macos-and-linux.305580/">this post</a>,
some firmware have native UEFI boot support for exFAT, and
<a href="https://youtu.be/Nt58WrkgAzk">this video</a> is full of comments of people
booting the Windows installer from an exFAT drive using this method, so
it might work for you!</p>
<p>Otherwise, nowadays <a href="https://github.com/WoeUSB/WoeUSB">WoeUSB</a> seems
like a good solution to prepare Windows USB drives, but if you want to
keep it low-level, there‚Äôs an even easier solution!</p>
<h2 id="splitting-the-iso-in-two-partitions" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/bootable-windows-usb-from-linux.html#splitting-the-iso-in-two-partitions"><span>Splitting the ISO in two partitions</span></a></h2>
<p>I found this quite unique solution in <a href="https://win10.guru/usb-install-media-with-larger-than-4gb-wim-file/">this blog post</a>.</p>
<p>It consists in making a 1 GB FAT32 partition on the USB, and using the
rest as NTFS, then copying everything from the ISO but the <code>sources</code>
directory to the FAT32 partition (only including <code>sources/boot.wim</code>),
and copying the whole ISO contents to the NTFS partition.</p>
<p>I‚Äôm not sure why this works, but it looks like Windows is able to handle
such a USB layout seamlessly, and it‚Äôs by far the easiest solution out
there, because it doesn‚Äôt require splitting the <code>install.wim</code> file, or
<a href="https://willhaley.com/blog/windows-installer-usb-linux/">installing and configuring</a>
<a href="https://help.ubuntu.com/community/Installation/iso2usb/diy/windows-installer-for-big-files">another bootloader</a>
to boot from a second partition (after all Windows installer‚Äôs
bootloader is already capable of doing that by itself!).</p>
<p>Here‚Äôs how to do it:</p>
<pre><code class="hljs language-sh">fdisk /dev/sdX <span class="hljs-comment"># Make a 1 GB partition and another partition with the rest</span>
mkfs.fat -F32 /dev/sdX1 <span class="hljs-comment"># Format as FAT32</span>
mkfs.ntfs --fast /dev/sdX2 <span class="hljs-comment"># Format as NTFS</span>

<span class="hljs-built_in">mkdir</span> boot usb windows <span class="hljs-comment"># Make some mount points</span>
mount /dev/sdX1 boot
mount /dev/sdX2 usb
mount windows.iso windows

<span class="hljs-comment"># Copy everything but the `sources` directory</span>
find iso -mindepth 1 -maxdepth 1 -not -name sources -<span class="hljs-built_in">exec</span> <span class="hljs-built_in">cp</span> -rv {} boot \;

<span class="hljs-comment"># Add `sources/boot.wim`</span>
<span class="hljs-built_in">mkdir</span> boot/sources
<span class="hljs-built_in">cp</span> iso/sources/boot.wim boot/sources

<span class="hljs-built_in">cp</span> -rv iso/* usb <span class="hljs-comment"># Copy everything to the NTFS partition</span>

umount windows
umount usb
umount boot
</code></pre>
<p>I hope you found this trick useful! And I wish you a smooth Windows
installation. üéâ</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Start a conversation on <a href="https://twitter.com/valeriangalliat">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>xfce4-terminal vs. foot</title>
    <link href="https://www.codejam.info/2022/04/xfce4-terminal-vs-foot.html" />
    <id>https://www.codejam.info/2022/04/xfce4-terminal-vs-foot.html</id>
    <updated>2022-04-05T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>This is going to be a pretty personal piece, but I figured I‚Äôd share
either way. ü§∑</p>
<p>I‚Äôve been using <a href="https://docs.xfce.org/apps/terminal/start">xfce4-terminal</a>
as my terminal emulator on Linux for quite a while now, and I like it.
It‚Äôs lightweight, supports emojis and has transparency, and it just
works for me.</p>
<p>Recently I switched to Wayland, and saw that <a href="https://swaywm.org/">Sway</a>
(the Wayland alternative to <a href="https://i3wm.org/">i3</a>) was using
<a href="https://codeberg.org/dnkl/foot">foot</a> as their default terminal
emulator. I didn‚Äôt know about it, but it‚Äôs described as ‚Äúa fast,
lightweight and minimalistic Wayland terminal emulator‚Äù, which sounds
like music to my ears, so I decided to try it!</p>
<p>Here‚Äôs my feedback after using it for a couple of weeks, in particular
the issues I encountered and the fixes I found.</p>
<h2 id="incompatibility-with-vim-for-some-ctrl-key-combinations" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/xfce4-terminal-vs-foot.html#incompatibility-with-vim-for-some-ctrl-key-combinations"><span>Incompatibility with Vim for some <kbd>Ctrl</kbd> key combinations</span></a></h2>
<p>The (deep) details are explained in <a href="https://github.com/vim/vim/issues/9014">this issue on Vim</a>,
<a href="https://codeberg.org/dnkl/foot/issues/849">this issue on foot</a>, and the
solution is documented <a href="https://codeberg.org/dnkl/foot/wiki#user-content-ctrl-key-breaks-input-in-vim">in foot‚Äôs wiki</a>.</p>
<p>Basically, doing some <kbd>Ctrl</kbd> key combinations can break other
<kbd>Ctrl</kbd> key mappings when using Vim inside foot.</p>
<p>This is due to the fact that <a href="https://github.com/vim/vim/issues/9014#issuecomment-965187794">foot uses CSI 27 escape sequences</a>
for some key combinations but keeps using ‚Äúlegacy‚Äù escape sequences for
others.</p>
<p><a href="https://invisible-island.net/xterm/manpage/xterm.html">xterm defines a feature <code>modifyOtherKeys</code></a>
defining 2 behaviors for dealing with escape sequences (level 1 and
level 2).</p>
<p>foot implements the level 1 but after seeing a CSI 27 escape sequence,
<a href="https://github.com/vim/vim/issues/9014#issuecomment-965388693">Vim assumes level 2</a>,
resulting in this incompatibility.</p>
<p>As mentioned <a href="https://codeberg.org/dnkl/foot/wiki#user-content-ctrl-key-breaks-input-in-vim">in foot‚Äôs wiki</a>,
I added the following to my <code>vimrc</code> to fix it:</p>
<pre><code class="hljs language-vim"><span class="hljs-comment">&quot;</span>
<span class="hljs-comment">&quot; Make Vim and foot collaborate.</span>
<span class="hljs-comment">&quot;</span>
<span class="hljs-comment">&quot; See &lt;https://codeberg.org/dnkl/foot/wiki#ctrl-key-breaks-input-in-vim&gt;</span>
<span class="hljs-comment">&quot; and &lt;https://github.com/vim/vim/issues/9014&gt;.</span>
<span class="hljs-comment">&quot;</span>
<span class="hljs-keyword">let</span> &amp;t_TI = <span class="hljs-string">&quot;\&lt;Esc&gt;[&gt;4;2m&quot;</span>
<span class="hljs-keyword">let</span> &amp;t_TE = <span class="hljs-string">&quot;\&lt;Esc&gt;[&gt;4m&quot;</span>
</code></pre>
<p>If you‚Äôre curious about <code>t_TI</code> and <code>t_TE</code>, you can read more about it
<a href="https://vi.stackexchange.com/a/27400">here</a>.</p>
<h2 id="bracketed-paste" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/xfce4-terminal-vs-foot.html#bracketed-paste"><span>Bracketed paste</span></a></h2>
<p><a href="https://cirw.in/blog/bracketed-paste">Bracketed paste</a> allows terminal
emulator to communicate through escape sequences that content is being
pasted as opposed of being typed, allowing programs to handle the
content differently.</p>
<p>This is especially useful inside Vim to paste text without having to
care about turning on and off <code>paste</code> mode (for example to avoid messed
up indent when pasting code).</p>
<p>Vim doesn‚Äôt know that foot supports bracketed paste so it doesn‚Äôt work
by default. But as shown in <code>:help xterm-bracketed-paste</code>, we can hint
at it by adding this to our <code>vimrc</code>:</p>
<pre><code class="hljs language-vim"><span class="hljs-keyword">if</span> &amp;term =~ <span class="hljs-string">&quot;foot&quot;</span>
    <span class="hljs-keyword">let</span> &amp;t_BE = <span class="hljs-string">&quot;\e[?2004h&quot;</span>
    <span class="hljs-keyword">let</span> &amp;t_BD = <span class="hljs-string">&quot;\e[?2004l&quot;</span>
    exec <span class="hljs-string">&quot;set t_PS=\e[200~&quot;</span>
    exec <span class="hljs-string">&quot;set t_PE=\e[201~&quot;</span>
<span class="hljs-keyword">endif</span>
</code></pre>
<p>Not too bad!</p>
<p>This is for Vim specifically, but <a href="https://codeberg.org/dnkl/foot/issues/305">from looking at this issue</a>,
it looks like there might be other bracketed paste support issues with
other software that need to be addressed individually. Not a problem for
me for now‚Ä¶</p>
<h2 id="clicking-urls" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/xfce4-terminal-vs-foot.html#clicking-urls"><span>Clicking URLs</span></a></h2>
<p>I took for granted to be able to <kbd>Ctrl</kbd> + click links in
terminal emulators. <a href="https://codeberg.org/dnkl/foot#user-content-urls">foot took a different approach</a>
to this with a keyboard-driven URL mode:</p>
<blockquote>
<p>Pressing <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd> enters ‚ÄúURL
mode‚Äù, where all currently visible URLs are underlined, and is
associated with a ‚Äújump-label‚Äù. The jump-label indicates the key
sequence (e.g. ‚ÄúAF‚Äù) to use to activate the URL.</p>
</blockquote>
<p>I love the ability to be <em>able</em> to navigate URLs using my keyboard only,
but I also like to have the <em>option</em> to click those links.</p>
<p>Sometimes the cost of pressing <kbd>Ctrl</kbd> + <kbd>Shift</kbd> +
<kbd>U</kbd>, identify the ‚Äújump-label‚Äù and typing it, feels higher than
the cost of switching to my trackpad and <kbd>Ctrl</kbd> + clicking the
URL I‚Äôm already looking at.</p>
<p>I probably would get used to it after a while if I <em>only</em> used foot, but
I also use iTerm2 on macOS where I <kbd>Command</kbd> + click the links,
and I like to keep shortcuts and habits somewhat consistent between all
the systems I use.</p>
<h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/xfce4-terminal-vs-foot.html#conclusion"><span>Conclusion</span></a></h2>
<p>foot is indeed fast and lightweight, and it‚Äôs a great Wayland terminal
emulator.</p>
<p>Because it sets <code>TERM=foot</code> in the environment, many programs (like Vim)
don‚Äôt have built-in support for it (e.g. knowing how foot handles escape
sequences and bracketed paste), meaning that you might need to add extra
configuration to all the programs where you need this to add foot
support.</p>
<p>xfce4-terminal, for better or for worse, sets <code>TERM=xterm-256color</code>,
which means most programs know out of the box how to deal with it (as
long as it maintains proper xterm compatibility). In practice, that‚Äôs
probably why xfce4-terminal ‚Äújust works‚Äù for me.</p>
<p>Because of that, and the fact I personally see clicking links as a ‚Äúmust
have‚Äù and a keyboard mode to open links a ‚Äúnice to have‚Äù, and not the
other way around, I‚Äôm moving back to xfce4-terminal.</p>
<p>I like lightweight and minimalist programs, but I like convenience as
well. xfce4-terminal is the perfect balance for me, and it‚Äôs pretty
strongly on the lightweight side already!</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Start a conversation on <a href="https://twitter.com/valeriangalliat">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Migrating .xmodmaprc to Wayland: remap arbitrary keys</title>
    <link href="https://www.codejam.info/2022/04/xmodmaprc-wayland.html" />
    <id>https://www.codejam.info/2022/04/xmodmaprc-wayland.html</id>
    <updated>2022-04-05T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>I recently moved from X11 to Wayland, and one of my challenges that came with it was to find an alternative for my <code>.xmodmaprc</code>, that I used for
two purposes:</p>
<ol>
<li><a href="https://github.com/valeriangalliat/dotfiles/blob/1d2098a7da513dab195554997efaac22a0d77a02/x11/xmodmaprc">Invert the left <kbd>Alt</kbd> and <kbd>Ctrl</kbd> keys</a>.</li>
<li><a href="https://www.codejam.info/2019/06/software-fn-lock.html">Invert the behavior of the function keys</a>,
(to emulate <kbd>Fn Lock</kbd> which is not supported on my laptop).</li>
</ol>
<p>Since <code>xmodmap</code> is a X11 thing, I needed to find a Wayland alternative
to this.</p>
<p>It seems that the common answer is to directly modify the XKB database
in <code>/usr/share/X11/xkb</code>, but according to <a href="https://unix.stackexchange.com/a/698044/521108">this Stack Exchange post</a>
(referencing the <a href="https://xkbcommon.org/doc/current/md_doc_user_configuration.html">XKB docs</a>),
we learn that we can customize XKB symbols in
<code>~/.config/xkb/symbols/&lt;name&gt;</code> and XKB rules in
<code>~/.config/xkb/rules/evdev</code>. Great.</p>
<h2 id="inverting-alt-and-ctrl" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/xmodmaprc-wayland.html#inverting-alt-and-ctrl"><span>Inverting <kbd>Alt</kbd> and <kbd>Ctrl</kbd></span></a></h2>
<p>This is something commonly done with <code>xmodmap</code>, and there‚Äôs very little
documentation of alternative solutions, but I found <a href="https://askubuntu.com/a/885047">this answer</a>
showing how to achieve that by modifying the XKB symbols in
<code>/usr/share/X11/xkb/symbols/ctrl</code>:</p>
<pre><code class="hljs language-conf">xkb_symbols &quot;swap_ralt_rctl&quot; {
    replace key &lt;RALT&gt; { [ Control_R, Control_R ] };
    replace key &lt;RCTL&gt; { [ Alt_R, Meta_R ] };
};
</code></pre>
<p>Because I just learnt I could modify stuff in <code>~/.config/xkb/symbols</code>
instead, I added this code to <code>~/.config/xkb/symbols/ctrl</code>.</p>
<p>Then in my Sway config (this will vary depending on your window manager
or desktop environment), I enabled the <code>ctrl:swap_ralt_rctl</code> option for
my keyboard:</p>
<pre><code class="hljs language-conf">input type:keyboard {
    xkb_options ctrl:swap_lalt_lctl
}
</code></pre>
<p>And this worked! <strong>But it shouldn‚Äôt have.</strong> I realized later (when
adding another option with a different name) that it is <strong>required</strong> to
also add a matching entry to the <code>xkb/rules/evdev</code> file. So why did it
work?</p>
<p>It turns out that there was already a native XKB option with that exact
name (in <code>/usr/share/X11/xkb/symbols/ctrl</code> and
<code>/usr/share/X11/xkb/rules/evdev</code>), and that‚Äôs why the name was
recognized. And unsurprisingly, that native option does exactly what I
want, so I could get rid of that <code>~/.config/xkb/symbols/ctrl</code> file
altogether and just use <code>ctrl:swap_lalt_lctl</code> in my Sway config. üòÜ</p>
<h2 id="emulating-fn-lock" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/xmodmaprc-wayland.html#emulating-fn-lock"><span>Emulating <kbd>Fn Lock</kbd></span></a></h2>
<p>Now on to the hardest part. My <code>~/.xmodmaprc</code> used to look like this,
essentially, mapping <kbd>F5</kbd> to what <kbd>Fn</kbd> + <kbd>F5</kbd>
would do, and inversely, and so on for a number of function keys that I
use.</p>
<pre><code class="hljs language-xmodmap">keycode 71  = XF86MonBrightnessDown
keycode 232 = F5
keycode 72  = XF86MonBrightnessUp
keycode 233 = F6
keycode 73  = XF86ScreenSaver
keycode 160 = F7
keycode 76  = XF86AudioMute
keycode 121 = F10
keycode 95  = XF86AudioLowerVolume
keycode 122 = F11
keycode 96  = XF86AudioRaiseVolume
keycode 123 = F12
</code></pre>
<p>With a bit of trial and error, and looking at the
<code>/usr/share/X11/xkb/keycodes/evdev</code> file, I could figure what were the
corresponding XKB keys for the codes above:</p>
<pre><code class="hljs">&lt;FK01&gt; = 67;
&lt;FK02&gt; = 68;
&lt;FK03&gt; = 69;
&lt;FK04&gt; = 70;
&lt;FK05&gt; = 71;
&lt;FK06&gt; = 72;
&lt;FK07&gt; = 73;
&lt;FK08&gt; = 74;
&lt;FK09&gt; = 75;
&lt;FK10&gt; = 76;
&lt;FK11&gt; = 95;
&lt;FK12&gt; = 96;
...
&lt;MUTE&gt; = 121;
&lt;VOL-&gt; = 122;
&lt;VOL+&gt; = 123;
...
alias &lt;I121&gt; = &lt;MUTE&gt;;	// #define KEY_MUTE                113
alias &lt;I122&gt; = &lt;VOL-&gt;;	// #define KEY_VOLUMEDOWN          114
alias &lt;I123&gt; = &lt;VOL+&gt;;	// #define KEY_VOLUMEUP            115
...
&lt;I160&gt; = 160;		// #define KEY_COFFEE              152
&lt;I232&gt; = 232;		// #define KEY_BRIGHTNESSDOWN      224
&lt;I233&gt; = 233;		// #define KEY_BRIGHTNESSUP        225
</code></pre>
<p>Leading me to the write following <code>~/.config/xkb/symbols/ctrl</code>:</p>
<pre><code class="hljs language-conf">partial modifier_keys
xkb_symbols &quot;swap_fn_keys&quot; {
    replace key &lt;FK05&gt; { [ XF86MonBrightnessDown ] };
    replace key &lt;FK06&gt; { [ XF86MonBrightnessUp ] };
    replace key &lt;FK07&gt; { [ XF86ScreenSaver ] };
    replace key &lt;FK09&gt; { [ XF86TouchpadToggle ] };
    replace key &lt;FK10&gt; { [ XF86AudioMute ] };
    replace key &lt;FK11&gt; { [ XF86AudioLowerVolume ] };
    replace key &lt;FK12&gt; { [ XF86AudioRaiseVolume ] };
    replace key &lt;I232&gt; { [ F5 ] };
    replace key &lt;I233&gt; { [ F6 ] };
    replace key &lt;I160&gt; { [ F7 ] };
    replace key &lt;I199&gt; { [ F9 ] };
    replace key &lt;I121&gt; { [ F10 ] };
    replace key &lt;I122&gt; { [ F11 ] };
    replace key &lt;I123&gt; { [ F12 ] };
};
</code></pre>
<p>And this time because <code>swap_fn_keys</code> is a new entry, I did need to add
it to <code>~/.config/xkb/rules/evdev</code>. According to the
<a href="https://xkbcommon.org/doc/current/md_doc_user_configuration.html#autotoc_md17">XKB docs</a>,
this is done with the following pattern:</p>
<pre><code class="hljs language-conf">! option = symbols
  ctrl:swap_fn_keys = +ctrl(swap_fn_keys)

! include %S/evdev
</code></pre>
<p>And I can finally include it to my Sway keyboard options:</p>
<pre><code class="hljs language-conf">input type:keyboard {
    xkb_options ctrl:swap_lalt_lctl,ctrl:swap_fn_keys
}
</code></pre>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Start a conversation on <a href="https://twitter.com/valeriangalliat">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Google Apps Script: sorry, unable to open the file at this time</title>
    <link href="https://www.codejam.info/2022/04/google-apps-script-unable-to-open-the-file.html" />
    <id>https://www.codejam.info/2022/04/google-apps-script-unable-to-open-the-file.html</id>
    <updated>2022-04-01T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>I was casually trying to open Google Apps Script on a spreadsheet of
mine:</p>
<figure class="center">
  <img alt="Google Apps Script opening from Google Sheets" src="https://www.codejam.info/img/2022/04/google-apps-script-open.png">
</figure>
<p>When I ran in the following error:</p>
<figure class="center">
  <img alt="Sorry, unable to open the file at this time, please check the address and try again" src="https://www.codejam.info/img/2022/04/google-apps-script-sorry.png">
</figure>
<p>Definitely not getting stuff done with Google Drive today. ü§¶‚Äç‚ôÄÔ∏è</p>
<p>A quick search for this error leads to <a href="https://support.google.com/docs/thread/99474963">this support thread</a>
where people report encountering the same problem and say it magically
goes away after a while without knowing why.</p>
<p>The thread was eventually locked without a reliable solution. Not good.</p>
<h2 id="the-reliable-solution" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/04/google-apps-script-unable-to-open-the-file.html#the-reliable-solution"><span>The reliable solution</span></a></h2>
<p>Turns out the cause of the problem (in my case) was that I was logged in
multiple Google accounts in this browser. Google Apps Script was working
well for the default Google account, but trying to open it in any of my
other Google accounts would result in this error.</p>
<figure class="center">
  <img alt="Multiple Google accounts" src="https://www.codejam.info/img/2022/04/google-multiple-accounts.png">
  <figcaption>Not my actual emails obviously</figcaption>
</figure>
<p>I didn‚Äôt find a way to properly associate a new spreadsheet with a
Google Apps Script on a Google account that‚Äôs not the default one, so
the solution is to <strong>log in to that Google account in a private window
(or another browser) so that it‚Äôs the default account, and use Google
Apps Script from there</strong>.</p>
<p>After you associated a new Google Apps Scripts project to the
spreadsheet of your choice, you can come back to your main browser and
open <a href="https://script.google.com/">Google Apps Scripts</a> directly there.
Using the user switcher on the top right you can connect to the proper
account and manage your project from there. Note that the Google Apps
Scripts UI doesn‚Äôt handle multiple users very well and might return you
at any time to the default user.</p>
<p>I know, not a fantastic solution, but now you know!</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Start a conversation on <a href="https://twitter.com/valeriangalliat">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Clearing cookies: the spec vs. the browser implementations</title>
    <link href="https://www.codejam.info/2022/03/clearing-cookies-spec-vs-browsers.html" />
    <id>https://www.codejam.info/2022/03/clearing-cookies-spec-vs-browsers.html</id>
    <updated>2022-03-25T04:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>I was watching the awesome
<a href="https://www.youtube.com/playlist?list=PL1y1iaEtjSYiiSGVlL1cHsXN_kvJOOhu-">Stanford CS 253 course about web security</a>
by <a href="https://feross.org/">Feross</a>, that he graciously made available for
free on YouTube, and in <a href="https://youtu.be/0-q69vAYSwo?t=2132">lecture 4, at 35:32</a>,
one thing bugged me about <strong>clearing cookies</strong>.</p>
<blockquote>
<p>When you actually go to clear the cookies [‚Ä¶], you got to make sure
that all the other attributes are also exactly the same than when it
was set.</p>
<p>It‚Äôs a little bit jinky, because if you don‚Äôt do this, the browser
thinks that it‚Äôs actually a separate cookie with the same name.</p>
</blockquote>
<p>In code, using Node.js and Express, this looks like this:</p>
<pre><code class="hljs language-js">res.<span class="hljs-title function_">cookie</span>(<span class="hljs-string">&#x27;sessionId&#x27;</span>, sessionId, {
  <span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">httpOnly</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">sameSite</span>: <span class="hljs-string">&#x27;lax&#x27;</span>,
  <span class="hljs-attr">maxAge</span>: <span class="hljs-number">30</span> * <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span> <span class="hljs-comment">// 30 days</span>
})

res.<span class="hljs-title function_">clearCookie</span>(<span class="hljs-string">&#x27;sessionId&#x27;</span>, {
  <span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">httpOnly</span>: <span class="hljs-literal">true</span>,
  <span class="hljs-attr">sameSite</span>: <span class="hljs-string">&#x27;lax&#x27;</span>
})
</code></pre>
<p>Or on plain HTTP:</p>
<pre><code class="hljs language-http"><span class="hljs-attribute">Set-Cookie</span><span class="hljs-punctuation">: </span>sessionId=...; MaxAge=...; Path=/; HttpOnly; Secure; SameSite=Lax

<span class="hljs-attribute">Set-Cookie</span><span class="hljs-punctuation">: </span>sessionId=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly; Secure; SameSite=Lax
</code></pre>
<p>That was quite a gotcha moment for me because I‚Äôve been dealing with
cookies all my career as a web developer and I had no idea about that.
I‚Äôm also pretty sure I‚Äôve been using <code>HttpOnly</code>,  <code>Secure</code> and
<code>SameSite</code> when setting cookies in the past, and don‚Äôt remember having
issues when clearing them without those flags.</p>
<h2 id="the-express-documentation" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/03/clearing-cookies-spec-vs-browsers.html#the-express-documentation"><span>The Express documentation</span></a></h2>
<p>The first step is to look at the <a href="https://expressjs.com/en/api.html#res.clearCookie"><code>res.clearCookie</code> documentation</a>.</p>
<p>Indeed, there‚Äôs a warning box with the following message:</p>
<blockquote>
<p>Web browsers and other compliant clients will only clear the cookie if
the given <code>options</code> is identical to those given to <code>res.cookie()</code>,
excluding <code>expires</code> and <code>maxAge</code>.</p>
</blockquote>
<p>There‚Äôs no source for what ‚Äúcompliant clients‚Äù means here though.</p>
<h2 id="the-spec" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/03/clearing-cookies-spec-vs-browsers.html#the-spec"><span>The spec</span></a></h2>
<p>By digging a bit, we find <a href="https://github.com/expressjs/express/issues/3874">this issue</a>
on the Express repo, from someone else that was apparently bugged by
this same warning a few years ago.</p>
<p>An Express maintainer jumps in with a link to the <a href="https://tools.ietf.org/search/rfc6265">HTTP cookies RFC</a>, in
particular the <a href="https://tools.ietf.org/search/rfc6265#section-5.3">storage model</a>
part:</p>
<blockquote>
<p>Ah, here is the specifics: <a href="https://tools.ietf.org/search/rfc6265#section-5.3">https://tools.ietf.org/search/rfc6265#section-5.3</a>.</p>
<p>I hope that helps! It‚Äôs the specification of exactly how clients are
supposed to set cookies, and outlines the algorithm of how to set the
cookie even when a given cookie already exists. It notes the following
have to match: <code>domain</code>, <code>path</code>, <code>httpOnly</code> if the <code>name</code> already
exists in the store (see step 11). The list of attributes in that spec
is not comprehensive, as additional attributes were added by other
specs, which I suspect define their own behaviors.</p>
</blockquote>
<p>And here‚Äôs the part 11 of the spec that was referred to here:</p>
<blockquote>
<ol start="11">
<li>
<p>If the cookie store contains a cookie with the same name,
domain, and path as the newly created cookie:</p>
<ol>
<li>
<p>Let old-cookie be the existing cookie with the same name,
domain, and path as the newly created cookie.  (Notice that
this algorithm maintains the invariant that there is at most
one such cookie.)</p>
</li>
<li>
<p>If the newly created cookie was received from a ‚Äúnon-HTTP‚Äù
API and the old-cookie‚Äôs http-only-flag is set, abort these
steps and ignore the newly created cookie entirely.</p>
</li>
<li>
<p>Update the creation-time of the newly created cookie to
match the creation-time of the old-cookie.</p>
</li>
<li>
<p>Remove the old-cookie from the cookie store.</p>
</li>
</ol>
</li>
</ol>
</blockquote>
<p>My understanding of the spec is that indeed <code>name</code>, <code>domain</code> and <code>path</code>
are all used to identify a specific cookie, so a cookie with the same
<code>name</code> but different <code>domain</code> or <code>path</code> won‚Äôt match. For <code>httpOnly</code> though,
it only mentions that if a non-HTTP API tries to expire an existing
<code>httpOnly</code> cookie (e.g. by doing <code>document.cookie = '...'</code>), this call
will be ignored, which makes sense.</p>
<p>But <code>httpOnly</code> is not used to match a cookie otherwise. A HTTP response
can expire a <code>httpOnly</code> cookie without setting <code>httpOnly</code> in the
<code>Set-Cookie</code> options, as long as the <code>name</code>, <code>domain</code> and <code>path</code> match.</p>
<p>As for additional attributes by newer specs like <code>secure</code> and
<code>sameSite</code>, no behavior seem to be documented but in practice they don‚Äôt
seem to matter, like <code>httpOnly</code>.</p>
<h2 id="real-life-example" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/03/clearing-cookies-spec-vs-browsers.html#real-life-example"><span>Real-life example</span></a></h2>
<p>Let‚Äôs build a server with an endpoint that sets a cookie with <code>secure</code>,
<code>httpOnly</code> and <code>sameSite</code>, and another endpoint that clears the cookie
without passing any option.</p>
<pre><code class="hljs language-js"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>)
<span class="hljs-keyword">const</span> cookieParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cookie-parser&#x27;</span>)

<span class="hljs-keyword">const</span> app = <span class="hljs-title function_">express</span>()

app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">cookieParser</span>())

app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> {
  res.<span class="hljs-title function_">json</span>(req.<span class="hljs-property">cookies</span>)
})

app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/set&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> {
  res.<span class="hljs-title function_">cookie</span>(<span class="hljs-string">&#x27;foo&#x27;</span>, <span class="hljs-string">&#x27;bar&#x27;</span>, {
    <span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">httpOnly</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">sameSite</span>: <span class="hljs-string">&#x27;lax&#x27;</span>,
    <span class="hljs-attr">maxAge</span>: <span class="hljs-number">30</span> * <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>
  })

  res.<span class="hljs-title function_">redirect</span>(<span class="hljs-string">&#x27;/&#x27;</span>)
})

app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/clear&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> {
  res.<span class="hljs-title function_">clearCookie</span>(<span class="hljs-string">&#x27;foo&#x27;</span>)
  res.<span class="hljs-title function_">redirect</span>(<span class="hljs-string">&#x27;/&#x27;</span>)
})

app.<span class="hljs-title function_">listen</span>(<span class="hljs-number">9999</span>)
</code></pre>
<p>Interestingly, it appears that both Chrome and Firefox allow cookies
with the <code>secure</code> attribute to be set on <code>http://localhost</code>, which is
convenient to test this feature. Note that on a ‚Äúreal‚Äù domain, you
would need to use HTTPS for <code>secure</code> cookies to be accepted.</p>
<p>If you browse to <code>http://localhost:9999</code> with Chrome or Firefox, you‚Äôll
see an empty JSON object (or whatever cookies already existed on
<code>localhost</code>).</p>
<p>By going to <code>/set</code>, a cookie will be set with
<code>foo=bar; MaxAge=...; Path=/; HttpOnly; Secure; SameSite=Lax</code>, and
redirect to <code>/</code>, showing that the cookie is set.</p>
<p>By going to <code>/clear</code>, the cookie will be cleared with <code>foo=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT</code>, then redirect to <code>/</code>. We can see
there that the cookie was effectively deleted, without needing to
specify other options.</p>
<p>If we repeat the test this time with a different domain or path, we can
see that they indeed need to match with the cookie that was previously
set in order to clear it.</p>
<h2 id="the-browsers-source-code" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/03/clearing-cookies-spec-vs-browsers.html#the-browsers-source-code"><span>The browsers source code</span></a></h2>
<p>We can confirm what we experienced by looking at the source code of
Chrome and Firefox.</p>
<p>Here‚Äôs the <a href="https://github.com/julienw/mozilla-central/blob/04464210145f8f7921447380d76efe0757243610/netwerk/cookie/nsCookieService.cpp#L5167">Firefox code that identifies a cookie from its
attributes</a>:</p>
<pre><code class="hljs language-cpp"><span class="hljs-keyword">if</span> (aHost.<span class="hljs-built_in">Equals</span>(cookie-&gt;<span class="hljs-built_in">Host</span>()) &amp;&amp;
    aPath.<span class="hljs-built_in">Equals</span>(cookie-&gt;<span class="hljs-built_in">Path</span>()) &amp;&amp;
    aName.<span class="hljs-built_in">Equals</span>(cookie-&gt;<span class="hljs-built_in">Name</span>())) {
  aIter = <span class="hljs-built_in">nsListIter</span>(entry, i);
  <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;
}
</code></pre>
<p>As we can see, it only uses the <code>host</code>, <code>path</code> and <code>name</code> to identify a
cookie.</p>
<p>On the Chrome side, <a href="https://source.chromium.org/chromium/chromium/src/+/main:net/cookies/canonical_cookie.h;drc=379f47d8daef415d929fe269e35e2bd432e1adb4;l=226">the code to test cookie equivalence</a>:</p>
<pre><code class="hljs language-cpp"><span class="hljs-comment">// Are the cookies considered equivalent in the eyes of RFC 2965.</span>
<span class="hljs-comment">// The RFC says that name must match (case-sensitive), domain must</span>
<span class="hljs-comment">// match (case insensitive), and path must match (case sensitive).</span>
<span class="hljs-comment">// For the case insensitive domain compare, we rely on the domain</span>
<span class="hljs-comment">// having been canonicalized (in</span>
<span class="hljs-comment">// GetCookieDomainWithString-&gt;CanonicalizeHost).</span>
<span class="hljs-comment">// If partitioned cookies are enabled, then we check the cookies have the same</span>
<span class="hljs-comment">// partition key in addition to the checks in RFC 2965.</span>
<span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">IsEquivalent</span><span class="hljs-params">(<span class="hljs-type">const</span> CanonicalCookie&amp; ecc)</span> <span class="hljs-type">const</span> </span>{
  <span class="hljs-comment">// It seems like it would make sense to take secure, httponly, and samesite</span>
  <span class="hljs-comment">// into account, but the RFC doesn&#x27;t specify this.</span>
  <span class="hljs-comment">// <span class="hljs-doctag">NOTE:</span> Keep this logic in-sync with TrimDuplicateCookiesForKey().</span>
  <span class="hljs-keyword">return</span> <span class="hljs-built_in">UniqueKey</span>() == ecc.<span class="hljs-built_in">UniqueKey</span>();
}

<span class="hljs-comment">// Returns a key such that two cookies with the same UniqueKey() are</span>
<span class="hljs-comment">// guaranteed to be equivalent in the sense of IsEquivalent().</span>
<span class="hljs-comment">// The `partition_key_` field will always be nullopt when partitioned cookies</span>
<span class="hljs-comment">// are not enabled.</span>
<span class="hljs-function">UniqueCookieKey <span class="hljs-title">UniqueKey</span><span class="hljs-params">()</span> <span class="hljs-type">const</span> </span>{
  <span class="hljs-keyword">return</span> std::<span class="hljs-built_in">make_tuple</span>(partition_key_, name_, domain_, path_);
}
</code></pre>
<p>Chrome also uses the <code>host</code> (<code>domain</code>), <code>path</code> and <code>name</code> to identify a
cookie.</p>
<p>Interestingly, they mention that ‚Äúit seems like it would make sense to
take <code>secure</code>, <code>httpOnly</code>, and <code>sameSite</code> into account, but the RFC
doesn‚Äôt specify this‚Äù.</p>
<h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/03/clearing-cookies-spec-vs-browsers.html#conclusion"><span>Conclusion</span></a></h2>
<p>Cookies are identified by their <code>name</code>, <code>domain</code> and <code>path</code>. On a single
site, you can have multiple cookies with the same <code>name</code> if their
<code>domain</code> or <code>path</code> differ.</p>
<p>This means that at the time of expiring a cookie, the <code>name</code>
(obviously) as well as <code>domain</code> and <code>path</code> must be the same as when the
cookie was originally set, otherwise it will be treated as a different
cookie and won‚Äôt result in the intended cookie being cleared.</p>
<p>Other attributes like <code>secure</code>, <code>httpOnly</code> and <code>sameSite</code> are not used
to distinguish cookies. They are only <em>attributes</em> of an existing cookie
(addressed by its <code>name</code>, <code>domain</code> and <code>path</code> as we just saw) and you
don‚Äôt need to specify them when clearing a cookie (although it doesn‚Äôt
hurt to include them, but they don‚Äôt have to match either). Both Chrome
and Firefox are currently consistent in that implementation.</p>
<p>That being said, it seems that the Chrome team believes that it would
make sense to also use <code>secure</code>, <code>httpOnly</code> and <code>sameSite</code> to address
cookies, even though they don‚Äôt currently implement it that way, since
the RFC doesn‚Äôt specify this. If this was to change in the future, and
because specifying those attributes when clearing a cookie doesn‚Äôt cause
issues with the current implementation, <strong>I would advise to specify all
the attributes when clearing the cookie</strong> just to be on the safe side.</p>
<p>In my example code earlier, I would recommend to rewrite it as:</p>
<pre><code class="hljs language-js">app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/set&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> {
  res.<span class="hljs-title function_">cookie</span>(<span class="hljs-string">&#x27;foo&#x27;</span>, <span class="hljs-string">&#x27;bar&#x27;</span>, {
    <span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">httpOnly</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">sameSite</span>: <span class="hljs-string">&#x27;lax&#x27;</span>,
    <span class="hljs-attr">maxAge</span>: <span class="hljs-number">30</span> * <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>
  })

  res.<span class="hljs-title function_">redirect</span>(<span class="hljs-string">&#x27;/&#x27;</span>)
})

app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/clear&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> {
  res.<span class="hljs-title function_">clearCookie</span>(<span class="hljs-string">&#x27;foo&#x27;</span>, {
    <span class="hljs-attr">secure</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">httpOnly</span>: <span class="hljs-literal">true</span>,
    <span class="hljs-attr">sameSite</span>: <span class="hljs-string">&#x27;lax&#x27;</span>
  })

  res.<span class="hljs-title function_">redirect</span>(<span class="hljs-string">&#x27;/&#x27;</span>)
})
</code></pre>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1507444723631407113">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Delete ghost volume from Time Machine snapshot</title>
    <link href="https://www.codejam.info/2022/03/delete-ghost-volume-from-time-machine-snapshot.html" />
    <id>https://www.codejam.info/2022/03/delete-ghost-volume-from-time-machine-snapshot.html</id>
    <updated>2022-03-08T05:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>This is the blog post version of
<a href="https://apple.stackexchange.com/a/438077/452681">my answer to this Stack Exchange question</a>.</p>
<h2 id="why-i-needed-to-remove-a-volume-backup" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/03/delete-ghost-volume-from-time-machine-snapshot.html#why-i-needed-to-remove-a-volume-backup"><span>Why I needed to remove a volume backup</span></a></h2>
<p>Recently, the external hard drive where I kept some of my video footage
<a href="https://twitter.com/valeriangalliat/status/1491106467310489604">died</a>.</p>
<p>But as I‚Äôm a good citizen and I have a backup (and restore) strategy,
all the data was also mirrored on my Time Machine drive! Yay!</p>
<p>So I proceeded to restore it to another internal drive where I had
enough room.</p>
<p>This could be the end of the story. But Time Machine kept persisting the
backups of that old external drive in all further snapshots.</p>
<p>This is a nice feature, for example if your external drive is unplugged
for a few days, you don‚Äôt want Time Machine to remove it from your
backup history. But in my case, that drive was actually <em>dead</em> and now I
restored it, I didn‚Äôt need this redundant ‚Äúphantom‚Äù backup.</p>
<p>It turns out you can‚Äôt easily delete arbitrary directories in a Time
Machine backup, and the <code>tmutil delete</code> command <a href="https://apple.stackexchange.com/q/333767/452681">doesn‚Äôt let you</a>
delete granular parts of a backup. It‚Äôs either <a href="https://apple.stackexchange.com/a/357114/452681">a whole snapshot, machine directory or backup store</a>.</p>
<p>Luckily, by messing around with the <code>tmutil</code> command, and because I
<a href="https://www.codejam.info/2021/11/yearly-hackintosh-upgrade-macos-monterey-with-opencore.html#finalizing">already played a bit with it</a>,
in the past I figured a way to hack it to remove a specific ghost volume
from a backup!</p>
<h2 id="the-theory" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/03/delete-ghost-volume-from-time-machine-snapshot.html#the-theory"><span>The theory</span></a></h2>
<p>Time Machine has in its state a directory <code>Video</code> (in my case) in the
backup snapshots, which it associates with <code>/Volumes/Video</code>, or more
specifically, the original disk UUID behind this mount point. Because
that disk is dead, this UUID is never to be seen again. But Time Machine
can‚Äôt know that. From its perspective, it‚Äôs just like this external
drive is unplugged, and it‚Äôs a good thing that it doesn‚Äôt remove it form
backups!</p>
<p>So, if we tell Time Machine that the <code>Video</code> backup directory is now
associated with <em>another</em> disk (that actually exists), it will
effectively put the new backup in it, instead of carrying over the
backup of the dead disk.</p>
<p>And even better, if we associate a disk that is <em>excluded</em> from Time
Machine backups, it will delete the <code>Video</code> directory altogether from
new snapshots!</p>
<h2 id="removing-the-ghost-backup-directory" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/03/delete-ghost-volume-from-time-machine-snapshot.html#removing-the-ghost-backup-directory"><span>Removing the ghost backup directory</span></a></h2>
<p>First, we need to identify a volume that‚Äôs already excluded from Time
Machine. Go in the Time Machine preferences, and in <kbd>Options‚Ä¶</kbd>, see if
you have an excluded volume. It could be an internal drive that you
explicitly excluded from backups, or an external drive that you never
explicitly included in backups.</p>
<p>If you don‚Äôt have any excluded disk (it needs to be a disk, not a
subdirectory), you can plug a random USB stick or SD card or something
similar.</p>
<p>Let‚Äôs pretend that your excluded disk is a USB stick, in <code>/Volumes/USB</code>,
and I‚Äôm trying to get rid of the <code>Video</code> directory inside my future backup
snapshots:</p>
<pre><code class="hljs language-sh">sudo tmutil associatedisk /Volumes/USB <span class="hljs-string">&quot;/Volumes/{TimeMachineDrive}/Backups.backupdb/{MachineDirectory}/Latest/Video&quot;</span>
</code></pre>
<p>Now Time Machine thinks that the <code>Video</code> directory is associated with
<code>/Volumes/USB</code>, which is excluded, and so, it will exclude it from
future backups!</p>
<p>The history of the dead <code>Video</code> drive will still be present in the older
snapshots, but Time Machine will be able to reclaim the space from it in
the future because that ‚Äúghost‚Äù volume is not being referenced anymore
in the newer backups.</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1501544474081640456">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>3 months of poison ivy, a story üåø</title>
    <link href="https://www.codejam.info/2022/02/3-months-of-poison-ivy-a-story.html" />
    <id>https://www.codejam.info/2022/02/3-months-of-poison-ivy-a-story.html</id>
    <updated>2022-02-25T05:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>Long story short, if you were walking through tall herbs in the woods,
removing weeds from your garden or anything like this, and a few days to
a week later <strong>you get a itchy rash</strong> somewhere on your body that was
exposed at the time, then it might be <em>poison ivy</em> (that is, if you live
in a part of the world where there‚Äôs poison ivy, e.g. North America).</p>
<p>If it‚Äôs bad enough that it doesn‚Äôt go away with the typical
over-the-counter treatments, <em>insist to get an appointment with a real
dermatologist (regardless if we‚Äôre in the middle of a global pandemic)
to get properly diagnosed and treated</em>. They might prescribe you a month
of oral steroids to properly get rid of it.</p>
<p>Or don‚Äôt do that and experience a taste of hell for 3 months like I did.</p>
<h2 id="things-i-learnt-about-poison-ivy" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/02/3-months-of-poison-ivy-a-story.html#things-i-learnt-about-poison-ivy"><span>Things I learnt about poison ivy</span></a></h2>
<ul>
<li>It‚Äôs an innocent-looking plant.</li>
<li>There‚Äôs not always a sign to warn you it‚Äôs around your path
(especially if you like to walk off tracks).</li>
<li>If you suspect you‚Äôve been in contact with it, or if you‚Äôve been in
contact with a bunch of random plants in the wild really, <strong>wash your
hands ASAP, in a lake, a river of whatever</strong>, that can help a lot and
could save you a nightmare.</li>
<li>That said poison ivy don‚Äôt usually grow below knee or waist level so
you shouldn‚Äôt be that worried about it unless you‚Äôre wearing shorts or
putting your hands close to the ground.</li>
<li>If you suspect a piece of clothing, gear or equipment has been in
contact with poison ivy, wash it thoroughly as the ‚Äúpoison‚Äù usually
stays on things it touched until washed with soap, and stays potent
for up to two years (meaning that if you touch that thing again you‚Äôll
get poison ivy again).</li>
<li>Depending on how bad was the contact with the plant, steroid creams
you can get at the pharmacy without prescription can be useless, and
even the stronger creams you can get with a prescription won‚Äôt
necessarily work, that‚Äôs why the dermatologist I ended up seeing after
3 months told me she usually prescribe 1 month of oral steroid
treatment for patients infected by poison ivy. You won‚Äôt have to bear
with the itchiness during that time plus it‚Äôs pretty much guaranteed
to fully get rid of it.</li>
<li><a href="https://www.doc2us.com/are-steroid-creams-harmful-the-unfounded-fear">Don‚Äôt be afraid of steroid creams</a>.
The side effects steroids are feared for are only for long use
(months), if a doctor tells you to put a cream for a few weeks to
treat a condition, it‚Äôs worth it.</li>
</ul>
<h2 id="the-story-with-timings" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/02/3-months-of-poison-ivy-a-story.html#the-story-with-timings"><span>The story with timings</span></a></h2>
<p>Back in May 2020, right after the first COVID confinement in Canada, I
go climb in a spot in the forest with my friend. I even recorded a vlog
that day!</p>
<figure class="video">
  <iframe src="https://www.youtube.com/embed/A7YC15AVGow" allowfullscreen></iframe>
</figure>
<p>Near the end of the day we decide to scale the hill we were close to to
get some views at the top, but since there wasn‚Äôt a path we just crossed
through the woods. You can see that at 36 minutes in the video. There
were some steep parts at times that definitely required me to touch the
ground with my hands. I suspect that‚Äôs where I got in contact with
poison ivy.</p>
<p>To make the matter worst, since we climbed all day and I hadn‚Äôt climbed
in a while, my fingers and hands had many cuts on them by the time we
did that hike. And because my hands were hurt, I didn‚Äôt like the idea of
putting them in water to wash them as we were near a river later on
(unlike my friend did, which probably saved him a lot of trouble), so I
only washed my hands hours later when I got home.</p>
<h3 id="june" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/02/3-months-of-poison-ivy-a-story.html#june"><span>June</span></a></h3>
<p>A week later, my hands start itching in a way that‚Äôs really unusual. I
wait a few days thinking it‚Äôll just go away but it gets worst. So I go
to the pharmacy where they tell me it‚Äôs likely poison ivy, explain me
what it is because I‚Äôve never heard of it at this point, and told me to
get an over-the-counter hydrocortisone cream to put every day for a week
or so.</p>
<p>For the whole month, I get on and off symptoms of itchiness, redness and
raised bumps over my hands. Sometimes it feels like it‚Äôs going away and
sometimes it‚Äôs getting worst. It made life quite challenging because
it‚Äôs basically something that I was constantly concerned about!</p>
<h3 id="july" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/02/3-months-of-poison-ivy-a-story.html#july"><span>July</span></a></h3>
<p>Early July, I have a call with an online doctor who tells me I need to
put a stronger steroid cream for at least 7 days, and prescribes me one.
No symptoms while I put the cream every morning, but sadly two days
after I stopped the treatment, I start to get symptoms again. They
get worst over time to the point where I decide to put the cream again
for 2 weeks this time. But again, as I stop the treatment, the symptoms
slowly creep back.</p>
<p>I call an online doctor again who tells me it might be some kind of
eczema, but I don‚Äôt need to see a dermatologist just yet (even though I
kept asking to see a real doctor to get treated properly, I mean it‚Äôs
been two months I‚Äôm dealing with this at that point). He tells me to put
moisturizing cream 4 times a day, and also prescribes me an even
stronger steroid cream, but I don‚Äôt use it right away because I didn‚Äôt
really like the idea to depend on steroids for my hands to feel normal.</p>
<p>Near the end of July the symptoms are still bad so I finally oblige to
put the steroids cream. Apparently for this kind short period usage,
<a href="https://www.doc2us.com/are-steroid-creams-harmful-the-unfounded-fear">it‚Äôs fine</a>.
Another 2 weeks of putting the cream every morning.</p>
<h3 id="august" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/02/3-months-of-poison-ivy-a-story.html#august"><span>August</span></a></h3>
<p>Guess what happens early August right after the 2 weeks treatment is
over? Yeap, itchiness comes back. And it gets pretty bad towards the
middle of the month. I don‚Äôt know if I‚Äôm experiencing poison ivy rebound
one more time or if it‚Äôs now steroid withdrawal symptom?</p>
<p>Another call with an online doctor who decides that I have <em>dyshidrotic
eczema</em> and finally agrees to send me to a proper dermatologist (thank
you). He also tells me to put a moisturizing cream specialized for
eczema (I used the <a href="https://www.cetaphil.ca/product/cetaphil-pro-restoraderm-eczema-soothing-moisturizer">Cetaphil PRO</a>)
and I can say it relieved the itching quite well in comparison to
cheaper moisturizers.</p>
<p>Finally he prescribes me an even stronger steroid cream
(mometasone) that I need to put every morning for 5 days, keeping it on
my hands for 20 minutes before rinsing it away. Not my favorite kind of
morning routine if you ask me.</p>
<p>On the 20th of August I finally get my dermatologist appointment, but by
this time the symptoms are not as bad as they were in the past. She
tells me it was definitely poison ivy and that the reason it lasted so
long for me was because the creams are not that good at treating it. She
normally prescribes 1 month of oral steroids for poison ivy treatment
which pretty much guarantees to get rid of it definitively (on top of
removing 100% of the annoying symptoms during that time). Good to know
if it ever happens to me again!</p>
<p>After that I kept using the moisturizing cream occasionally for a few
months as my skin was still dryer than usual, but itching was basically
gone and I could live a happy life again. Eventually I stopped the
moisturizer as my hands were fully back to normal.</p>
<h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/02/3-months-of-poison-ivy-a-story.html#conclusion"><span>Conclusion</span></a></h2>
<p>I already put the conclusion in the very beginning of this article
because I don‚Äôt really think anyone cares about the rest of the story.
That was just some old notes I had, and I didn‚Äôt want to just delete
them as I figured they might be useful.</p>
<p>Typically, I looked up online about this stuff every single day to
figure what was wrong with my hands, and it was hard to get an idea of
what treatment I needed and what to expect. Obviously this can vary a
lot but I think reading a concrete example like this one can help
getting an idea of what to expect, and especially not making the same
mistakes.</p>
<p>In this COVID world it can be hard to see a doctor in real life, but I
can‚Äôt stress how important it is to meet a real professional to address
seriously this kind of issue, especially if they persist after the basic
pharmacy treatments or other suggestions found on the internet.</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Start a conversation on <a href="https://twitter.com/valeriangalliat">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>How to Call Google Cloud APIs from Cloudflare Workers</title>
    <link href="https://hookdeck.com/blog/post/how-to-call-google-cloud-apis-from-cloudflare-workers" />
    <id>https://hookdeck.com/blog/post/how-to-call-google-cloud-apis-from-cloudflare-workers</id>
    <updated>2022-02-16T05:00:00.000Z</updated>
  </entry>
  <entry>
    <title>A second .gitignore that ignores itself ü§Ø</title>
    <link href="https://www.codejam.info/2022/01/a-second-gitignore-that-ignores-itself.html" />
    <id>https://www.codejam.info/2022/01/a-second-gitignore-that-ignores-itself.html</id>
    <updated>2022-01-26T05:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>When collaborating on a project, it‚Äôs quite frequent that I create extra
scratch files to fiddle locally. This is your ad hoc <code>test.js</code> and alike.</p>
<p>I usually don‚Äôt want to commit those files, and I don‚Äôt necessarily want
to add them to the project‚Äôs <code>.gitignore</code> either, because they‚Äôre only
a product of my local workflow and that shouldn‚Äôt leak in the shared
repository. What I wanted was like <strong>a second <code>.gitignore</code> file</strong>, but
that wouldn‚Äôt be committed to the repository, essentially <em>ignoring
itself</em> (and my scratch files).</p>
<p>For a long time I‚Äôve just let those files unstaged, carefully avoiding
them every time I make a commit (never using <code>git add .</code> and such). But
there is actually a better way.</p>
<h2 id="all-the-ways-to-ignore-files-in-git" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/01/a-second-gitignore-that-ignores-itself.html#all-the-ways-to-ignore-files-in-git"><span>All the ways to ignore files in Git</span></a></h2>
<p>As mentioned in the <a href="https://git-scm.com/docs/gitignore"><code>.gitignore</code> man page</a>,
there‚Äôs actually multiple layers for Git to ignore files in a repository:</p>
<ul>
<li>Patterns passed as command line arguments.</li>
<li>Patterns from the <code>.gitignore</code> file (most common way).</li>
<li>Patterns from <code>.git/info/exclude</code>.</li>
<li>Patterns from the file configured in <code>core.excludesFile</code>, and
defaulting to <code>~/.config/git/ignore</code>.</li>
</ul>
<h2 id="introducing-git-info-exclude" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/01/a-second-gitignore-that-ignores-itself.html#introducing-git-info-exclude"><span>Introducing <code>.git/info/exclude</code></span></a></h2>
<p>I didn‚Äôt know it existed, but it was there that whole time! Every Git
repo have an empty <code>.git/info/exclude</code> file, which works exactly like a
<code>.gitignore</code> file, except it‚Äôs not committed, and it‚Äôs only local to
the current copy of the repository.</p>
<p>That‚Äôs exactly what I wanted! I can add my scratch files to it and I
don‚Äôt have to worry about accidentally committing them anymore, and I
can finally <code>git add .</code> again!</p>
<h2 id="the-original-trick-with-core-excludesfiles" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2022/01/a-second-gitignore-that-ignores-itself.html#the-original-trick-with-core-excludesfiles"><span>The original trick with <code>core.excludesFiles</code></span></a></h2>
<p>The fun thing is that I only learnt about <code>.git/info/exclude</code> while
writing this article, I actually didn‚Äôt go that far in my prior
research. I first discovered the <code>core.excludesFile</code> option, which
allowed me to solved my problem, so I stopped at that. It‚Äôs only when I
started to write about it that I noticed there was an even better
option. This is yet another example of the power of writing, and the
reason why I like to share every little bit of knowledge like this.</p>
<p>Anyways, my original trick was to use the <code>core.excludesFile</code> option. As
we saw, we can configure it to an additional <code>.gitignore</code> file that can
live anywhere on the system. If set in the global Git config
(<code>git config --global core.excludesFile</code>, targeting <code>~/.gitconfig</code>),
it‚Äôll affect every repository, but if set in the local Git config (<code>git config core.excludesFile</code>, targeting <code>.git/config</code>) in a specific repo,
we can add a second <code>.gitignore</code> file only for that repo!</p>
<p>So what I did was:</p>
<pre><code class="hljs language-sh">git config core.excludesFile .valignore
</code></pre>
<p>And I added a new file, <code>.valignore</code>, with the following content:</p>
<pre><code class="hljs language-gitignore">/.valignore
/test.js
</code></pre>
<p>Effectively ignoring itself, as well as my scratch file!</p>
<p>The downside is there can only be a single <code>core.excludesFile</code>, meaning
this is potentially shadowing a global <code>core.excludesFile</code>. If you rely
on that, e.g. you use <code>~/.config/git/ignore</code>, you would have to
duplicate its content in the <code>.valignore</code> or whatever you called it.</p>
<p>But as I mentioned earlier, <code>.git/info/exclude</code> is an even better
solution for this problem, so you can actually have it all!</p>
<p>Happy hacking, and keep learning! üòú</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1486539328373374977">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Static DHCP server on Arch Linux in 2021, two ways</title>
    <link href="https://www.codejam.info/2021/11/static-dhcp-server-arch-linux.html" />
    <id>https://www.codejam.info/2021/11/static-dhcp-server-arch-linux.html</id>
    <updated>2021-11-26T05:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>Turns out it‚Äôs 2021 and configuring a static server on at least some
Linux flavours isn‚Äôt as easy as editing <code>/etc/resolv.conf</code> anymore, at
least if you want it to persist across reboots.</p>
<p>Depending on your network stack, I‚Äôll suggest two ways, one might work
for you, both work in my case.</p>
<p>In <code>/etc/resolvconf.conf</code>, add the following:</p>
<pre><code class="hljs">name_servers=&quot;1.1.1.1 1.0.0.1&quot;
</code></pre>
<p>Or in <code>/etc/dhcpcd.conf</code>, add the following:</p>
<pre><code class="hljs">static domain_name_servers=1.1.1.1 1.0.0.1
</code></pre>
<p>Obviously replace <code>1.1.1.1</code> and <code>1.0.0.1</code> by the DNS servers of you
choosing.</p>
<p>But that being said, as far as I‚Äôm concerned, I went with the third
option which is to configure it at the router level! This way every
device that connects to it benefits from this configuration if they
don‚Äôt override it.</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Start a conversation on <a href="https://twitter.com/valeriangalliat">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Emoji displayed as monochrome symbol? ü§î The Unicode variation selector</title>
    <link href="https://www.codejam.info/2021/11/emoji-variation-selector.html" />
    <id>https://www.codejam.info/2021/11/emoji-variation-selector.html</id>
    <updated>2021-11-19T05:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>Are you wondering why some specific emoji are sometimes displayed as
black and white symbols instead of a colored glyph? And even more
confusing, you notice it happens on one device but looks perfect on
another? Look no further, you‚Äôll find all the answers in this article!</p>
<h2 id="tldr" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/emoji-variation-selector.html#tldr"><span>TLDR</span></a></h2>
<p>Some symbols can be displayed either as text (black and white glyph) or
as a color emoji. Using Unicode <a href="https://en.wikipedia.org/wiki/Variation_Selectors_(Unicode_block)">variation selectors</a>,
we can hint at whether to use one or the other, but when no variation
selector is specified, it‚Äôs up to the system to decide which one to
pick, introducing inconsistencies.</p>
<p>Most emoji pickers will include the emoji variation selector to symbols
that would otherwise be ambiguous, but others won‚Äôt and that‚Äôs probably
how you ended up here.</p>
<p>If you want to make sure your emoji are always displayed in their color
version, the default macOS emoji picker does just that, otherwise
copy/pasting from <a href="https://emojipedia.org/">Emojipedia</a> also works, as
they both don‚Äôt leave room for ambiguity.</p>
<h2 id="the-story" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/emoji-variation-selector.html#the-story"><span>The story</span></a></h2>
<p>I initially noticed that some emoji that I added from my Linux machine
using <a href="https://github.com/valeriangalliat/dmenumoji">dmenumoji</a> or <a href="https://github.com/fdw/rofimoji"><code>rofimoji</code></a>
were displayed as black and white symbols on macOS and Android.</p>
<p>For a while I just fixed them by inserting them again from another
device, or copy/pasting them from <a href="https://emojipedia.org/">Emojipedia</a>,
but I eventually got tired of this and decided to understand why this
was happening in the first place.</p>
<h2 id="what-i-learnt" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/emoji-variation-selector.html#what-i-learnt"><span>What I learnt</span></a></h2>
<p>Unicode defines two <a href="https://en.wikipedia.org/wiki/Variation_Selectors_(Unicode_block)">variation selector characters</a>,
<a href="https://codepoints.net/U+FE0E">U+FE0E</a> and <a href="https://codepoints.net/U+FE0F">U+FE0F</a>,
also respectively known as VS15 and VS16.</p>
<p>When VS15 is appended to a symbol, it forces it to be displayed as text
(black and white glyph). Contrarily, when VS16 is appended, it forces
the color version to be displayed (emoji).</p>
<p>Now here‚Äôs the fun part. What happens when a symbol has both a text and
a color variant, and no variant selector is specified?
<a href="https://en.wikipedia.org/wiki/Emoticons_(Unicode_block)#Variant_forms">According to Wikipedia</a>,
the emoji variant is selected:</p>
<blockquote>
<p>If there is no variation selector appended, the default is the
emoji-style.</p>
</blockquote>
<p>But <a href="https://www.codejam.info/2021/11/emoji-variation-selector.html#concrete-tests">in reality</a>, it appears that macOS and Android
will in fact default to the text symbol if there‚Äôs one available! So
should we just append the VS16 code point on every single emoji? From
<a href="https://emojipedia.org/variation-selector-16/">its Emojipedia page</a>:</p>
<blockquote>
<p>[VS16 is] an invisible code point which specifies that the preceding
character should be displayed with emoji presentation. Only required
if the preceding character defaults to text presentation.</p>
</blockquote>
<p>Alright. But we just saw that this is system-specific. Still, how do we
know which character <em>can</em> default to a text presentation? An
interesting hint is in the <a href="https://unicode.org/faq/vs.html">unicode.org FAQ</a>.</p>
<blockquote>
<p><strong>What variation sequences are valid?</strong></p>
<p>Only those listed in <a href="http://unicode.org/Public/UCD/latest/ucd/StandardizedVariants.txt"><code>StandardizedVariants.txt</code></a>,
<a href="http://unicode.org/Public/UCD/latest/ucd/StandardizedVariants.txt"><code>emoji-variation-sequences.txt</code></a>,
or the registered sequences listed in the <a href="http://www.unicode.org/ivd/">Ideographic Variation Database (IVD)</a>.</p>
</blockquote>
<p>Here, we specifically care about <a href="http://www.unicode.org/Public/emoji/5.0/emoji-variation-sequences.txt"><code>emoji-variation-sequences.txt</code></a>,
the other sources not being related to emoji. This file lists all the
symbols that have both a monochrome glyph and a color emoji available.</p>
<p>It‚Äôs only for those symbols that we need to append the VS16 code point
to make sure that they‚Äôre displayed consistently on every system. And it
looks like that‚Äôs precisely what the macOS and Android emoji pickers
seem to be doing!</p>
<h2 id="concrete-tests" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/emoji-variation-selector.html#concrete-tests"><span>Concrete tests</span></a></h2>
<p>Let‚Äôs look at a few concrete examples to highlight the inconsistencies.</p>
<table>
<thead>
<tr>
<th>Unicode code points</th>
<th>Command</th>
<th>Result</th>
</tr>
</thead>
<tbody>
<tr>
<td>U+1F60A</td>
<td><code>printf '\U0001f60A'</code></td>
<td>üòä</td>
</tr>
<tr>
<td>U+1F60A, U+FE0E</td>
<td><code>printf '\U0001f60A\ufe0e'</code></td>
<td>üòäÔ∏é</td>
</tr>
<tr>
<td>U+1F60A, U+FE0F</td>
<td><code>printf '\U0001f60A\ufe0f'</code></td>
<td>üòäÔ∏è</td>
</tr>
<tr>
<td>U+1F610</td>
<td><code>printf '\U0001f610'</code></td>
<td>üòê</td>
</tr>
<tr>
<td>U+1F610, U+FE0E</td>
<td><code>printf '\U0001f610\ufe0e'</code></td>
<td>üòêÔ∏é</td>
</tr>
<tr>
<td>U+1F610, U+FE0F</td>
<td><code>printf '\U0001f610'\ufe0f</code></td>
<td>üòêÔ∏è</td>
</tr>
<tr>
<td>U+2639</td>
<td><code>printf '\u2639'</code></td>
<td>‚òπ</td>
</tr>
<tr>
<td>U+2639, U+FE0E</td>
<td><code>printf '\u2639\ufe0e'</code></td>
<td>‚òπÔ∏é</td>
</tr>
<tr>
<td>U+2639, U+FE0F</td>
<td><code>printf '\u2639\ufe0f'</code></td>
<td>‚òπÔ∏è</td>
</tr>
<tr>
<td>U+270D</td>
<td><code>printf '\u270d'</code></td>
<td>‚úç</td>
</tr>
<tr>
<td>U+270D, U+FE0E</td>
<td><code>printf '\u270d\ufe0e'</code></td>
<td>‚úçÔ∏é</td>
</tr>
<tr>
<td>U+270D, U+FE0F</td>
<td><code>printf '\u270d\ufe0f'</code></td>
<td>‚úçÔ∏è</td>
</tr>
</tbody>
</table>
<p>Or put another way:</p>
<table>
<thead>
<tr>
<th>Default</th>
<th>Text</th>
<th>Emoji</th>
</tr>
</thead>
<tbody>
<tr>
<td>üòä</td>
<td>üòäÔ∏é</td>
<td>üòäÔ∏è</td>
</tr>
<tr>
<td>üòê</td>
<td>üòêÔ∏é</td>
<td>üòêÔ∏è</td>
</tr>
<tr>
<td>‚òπ</td>
<td>‚òπÔ∏é</td>
<td>‚òπÔ∏è</td>
</tr>
<tr>
<td>‚úç</td>
<td>‚úçÔ∏é</td>
<td>‚úçÔ∏è</td>
</tr>
</tbody>
</table>
<p>Your mileage may vary, but when I compare that table on my different
devices, while they all display the emoji variant properly, there‚Äôs a
few inconsistencies for the default (no variant) and explicit text
variant.</p>
<table>
<thead>
<tr>
<th>System</th>
<th>Emoji</th>
<th>Default</th>
<th>Text</th>
</tr>
</thead>
<tbody>
<tr>
<td>Linux</td>
<td>üòäÔ∏è</td>
<td>Emoji</td>
<td>Emoji</td>
</tr>
<tr>
<td>Linux</td>
<td>üòêÔ∏è</td>
<td>Emoji</td>
<td>Text</td>
</tr>
<tr>
<td>Linux</td>
<td>‚òπÔ∏è</td>
<td>Emoji</td>
<td>Text</td>
</tr>
<tr>
<td>Linux</td>
<td>‚úçÔ∏è</td>
<td>Emoji</td>
<td>Text</td>
</tr>
<tr>
<td>macOS</td>
<td>üòäÔ∏è</td>
<td>Emoji</td>
<td>Emoji</td>
</tr>
<tr>
<td>macOS</td>
<td>üòêÔ∏è</td>
<td>Emoji</td>
<td>Emoji</td>
</tr>
<tr>
<td>macOS</td>
<td>‚òπÔ∏è</td>
<td>Text</td>
<td>Text</td>
</tr>
<tr>
<td>macOS</td>
<td>‚úçÔ∏è</td>
<td>Text</td>
<td>Text</td>
</tr>
<tr>
<td>Android</td>
<td>üòäÔ∏è</td>
<td>Emoji</td>
<td>Emoji</td>
</tr>
<tr>
<td>Android</td>
<td>üòêÔ∏è</td>
<td>Emoji</td>
<td>Emoji</td>
</tr>
<tr>
<td>Android</td>
<td>‚òπÔ∏è</td>
<td>Text</td>
<td>Text</td>
</tr>
<tr>
<td>Android</td>
<td>‚úçÔ∏è</td>
<td>Text</td>
<td>Text</td>
</tr>
</tbody>
</table>
<p>While the font on my Linux machine doesn‚Äôt have a text representation of
the blush emoji, it does for all the other ones. Regardless, when no
variant is specified, it always shows an emoji.</p>
<p>On the other hand, macOS and Android always default to the text variant,
but they appear to not have one available for the blush and neutral face
emoji.</p>
<div class="note">
<p><strong>Note:</strong> those results are the ones I observed, but you might see
something different on your side! I‚Äôve got a report from someone also
on a fresh macOS Monterey who gets different results from me, with the
frowning face showing as text even when explicitly requested as emoji,
and only for this site! And their default writing hand is an emoji even
though the text one is supported.</p>
<p>This might be due to differences in rendering betweem Chrome and
Firefox, so know that the browser can also affect this kind of things.</p>
<p><a href="https://twitter.com/valeriangalliat/status/1461856790602264579">Let me know</a>
if you observe something even different, I‚Äôm curious! üòÅ</p>
</div>
<h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/emoji-variation-selector.html#conclusion"><span>Conclusion</span></a></h2>
<p>In today‚Äôs article, we looked more closely at the Unicode standard and
the emoji specification to understand how to deal with symbols that have
both a text and emoji style available. We learnt about the VS15 and VS16
code points to select a specific variant, instead of leaving it for the
system to decide. Finally, we found out what symbols need an explicit
variant to be specified in order to avoid being rendered inconsistently.</p>
<p>I hope you now have everything you need to understand why you might be
noticing those inconsistencies, and how to fix them. Cheers! ‚úåÔ∏è</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1461856790602264579">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Using Homebrew on a multi-user system (don‚Äôt)</title>
    <link href="https://www.codejam.info/2021/11/homebrew-multi-user.html" />
    <id>https://www.codejam.info/2021/11/homebrew-multi-user.html</id>
    <updated>2021-11-17T05:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>I‚Äôve recently <a href="https://twitter.com/valeriangalliat/status/1460337357094326275">started working at a new company</a>,
where I‚Äôve got the freedom to use my own rig, which is especially nice
if I want to work while travelling without having to bring two laptops
with me.</p>
<p>But setting up a work environment on my personal computer actually
brings a number of concerns, mainly about:</p>
<ul>
<li>Environment variables.</li>
<li>Development tools and configurations.</li>
<li>Shell history.</li>
</ul>
<p>Whether it‚Äôs my personal Google Cloud context leaking in my work
environment, work SSH keys being available in my personal projects,
various unrelated developer tokens and credentials cohabiting in the
same environment, and work-specific commands popping in my personal
shell history and making me press the up arrow even more than I already
do, it quickly feels like poor hygiene to keep everything under the same
user.</p>
<p>And while some of those tools allow to authenticate with multiple
accounts and offer ways to configure them individually and switch
between contexts, I‚Äôve seen enough mistakes happen by juggling between
staging and production environments in the same session that adding my
personal credentials to the mix sounds like a recipe for disaster.</p>
<p>So after realizing that merging my personal projects with my
professional environment was a bad idea, I decided to create a dedicated
user for work, this way everything would be neatly contained. Meet the
multi-user system.</p>
<h2 id="sharing-a-homebrew-is-nice-but-brew-not-so-much" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/homebrew-multi-user.html#sharing-a-homebrew-is-nice-but-brew-not-so-much"><span>Sharing a homebrew is nice üç∫, but <code>brew</code> not so much</span></a></h2>
<p>The main issue I ran doing that was about running <a href="https://brew.sh/">Homebrew</a>,
the tool I install macOS packages with, and which I happen to use both
personally and for work.</p>
<p>Out of the box, if you install it from one user, it‚Äôll just fail to do
anything when run from another user because of permission issues.</p>
<h3 id="the-evil-shared-group-writable-permissions" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/homebrew-multi-user.html#the-evil-shared-group-writable-permissions"><span>The evil: shared group writable permissions</span></a></h3>
<p>Turns out I‚Äôm
<a href="https://medium.com/@leifhanack/homebrew-multi-user-setup-e10cb5849d59">not</a>
<a href="https://stackoverflow.com/questions/41840479/how-to-use-homebrew-on-a-multi-user-macos-sierra-setup">the</a>
<a href="https://gist.github.com/jaibeee/9a4ea6aa9d428bc77925">only</a>
<a href="https://newbedev.com/how-to-use-homebrew-on-a-multi-user-macos-sierra-setup">one</a>
to try to do this, a simple search for this yields a fuckton of results!
And they all mostly share the same ‚Äútip‚Äù which is some variant of:</p>
<pre><code class="hljs language-sh"><span class="hljs-built_in">chgrp</span> -R admin /usr/local/*
<span class="hljs-built_in">chmod</span> -R g+w /usr/local/*
</code></pre>
<p>Some variants use <code>brew --prefix</code> instead of hardcoding <code>/usr/local</code>,
some use a custom group instead of <code>admin</code>. Either way, it‚Äôs all the
same, and it appears to work at first, until it doesn‚Äôt.</p>
<p>The problem is that Homebrew is <em>not</em> designed to be used by multiple
Unix users. A given Homebrew installation is only meant to be used by a
single non-root user.</p>
<p>By giving write access to a given group (in the above example, <code>admin</code>),
that is shared by all the users you want to call <code>brew</code> from, you get
the illusion that you allowed <code>brew</code> to be used by multiple users.</p>
<p>But the issue is that the default <a href="https://en.wikipedia.org/wiki/Umask"><code>umask</code></a>
that <code>brew</code> uses doesn‚Äôt add group write access, meaning that as you
use <code>brew</code>, more and more parts of the state will not be writable by the
other users in your group.</p>
<p>For example if after running the earlier hack, you run <code>brew install some-package</code> as user <code>foo</code>, then you won‚Äôt be able to <code>brew uninstall some-package</code> or <code>brew update some-package</code> as user <code>bar</code>, because the
permission for the newly created files won‚Äôt have group write access.</p>
<p>This means that if you instal packages from different users, <code>brew update</code> will very quickly fail to run on <em>any</em> of those users because
none have access to <em>everything</em> anymore. Sure, you can solve that by
running the <code>chmod</code> hack again, but that‚Äôs flaky and won‚Äôt event prevent
every edge cases.</p>
<p>You see setups as crazy as running the <code>chmod</code> command in <code>~/.zshrc</code> or
similar to prevent this, which will still fall apart if you don‚Äôt open a
new terminal session every time right before running <code>brew</code>, on top of
being a performance nightmare!</p>
<h3 id="the-bad-separate-homebrew-installations" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/homebrew-multi-user.html#the-bad-separate-homebrew-installations"><span>The bad: separate Homebrew installations</span></a></h3>
<p>Another approach that‚Äôs <a href="https://stackoverflow.com/a/55021458/4324668">not</a>
<a href="https://docs.brew.sh/Installation#alternative-installs">as</a>
<a href="https://code.roygreenfeld.com/cookbook/homebrew-multi-user-setup.html">widespread</a>
as the first one is to maintain a separate <code>brew</code> installation per user,
e.g. somewhere under the home directory as opposed to the default global
location.</p>
<p>That sounds like a great idea and would be my favorite way if it wasn‚Äôt
for the fact that <strong>pretty much every package I wanted to install needed
to be compiled from source because the prebuilt binaries only works with
the default global prefix</strong>!</p>
<p>This makes <code>brew</code> effectively unusable as it can take ages to compile
complete dependency trees that way.</p>
<p>On top of that you can read the following in the <a href="https://docs.brew.sh/Installation#alternative-installs">official documentation</a>
which definitely doesn‚Äôt make me want to go that way:</p>
<blockquote>
<p>However do yourself a favour and use the installer to install to the
default prefix. Some things may not build when installed elsewhere.
One of the reasons Homebrew just works relative to the competition is
<strong>because</strong> we recommend installing here. <em>Pick another prefix at your
peril!</em></p>
</blockquote>
<p>This confirms my first feeling about this method: Homebrew is <em>not</em>
designed to be installed outside of its default prefix and you‚Äôll run
into all sort of issues if you do. I don‚Äôt like spending my time fixing
issues like these so I‚Äôll pass.</p>
<h3 id="the-good-dedicate-a-single-user-account-to-homebrew" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/homebrew-multi-user.html#the-good-dedicate-a-single-user-account-to-homebrew"><span>The good: dedicate a single user account to Homebrew</span></a></h3>
<p>This is what‚Äôs recommended for multi-user systems
<a href="https://docs.brew.sh/FAQ#why-does-homebrew-say-sudo-is-bad">in the Homebrew FAQ</a>.
Sadly this page is not well ranked when looking for how to to use
Homebrew in a multi-user system (unlike the previous hacks) and I only
found it write writing this post. The fun thing is that it‚Äôs also the
approach that I decided to use for myself and was about to document
here!</p>
<blockquote>
<p>If you need to run Homebrew in a multi-user environment, consider
creating a separate user account especially for use of Homebrew.</p>
</blockquote>
<p>So while I‚Äôm in fact not inventing anything new here, hopefully I can
help this solution to be better ranked and prevent people from running
into the issues that are guaranteed to happen with the earlier hacks!</p>
<p>The solution is simple. Because <strong>Homebrew is not designed to be used by
multiple users</strong>, and it‚Äôs <strong>not designed to be installed anywhere else than
the default location</strong>, what you want to do instead is to install
Homebrew in its <strong>default location</strong> with a <strong>dedicated user</strong> that you
switch to in order to use it.</p>
<p>Sounds annoying? Just use <code>sudo</code>! While Homebrew
<a href="https://docs.brew.sh/FAQ#why-does-homebrew-say-sudo-is-bad">documents</a>
that it &quot;refuses to work using <code>sudo</code>&quot;, this is not exactly true.
Homebrew refuses to work as root, but you can still use <code>sudo</code> to use it
as another, non-root user!</p>
<p>Typically, if you installed Homebrew in its default location from the
user <code>foo</code>, and now you‚Äôre user <code>bar</code> and want to run <code>brew update</code>:</p>
<pre><code class="hljs language-sh">sudo -Hu foo brew update
</code></pre>
<ul>
<li>The <code>-H</code> option will make sure that the <code>HOME</code> directory is set
to that of the impersonated user (here <code>foo</code>) instead of the
<em>impersonating user</em> (here <code>bar</code>), so that Homebrew can maintain its
cache and other local state in the proper user‚Äôs home.</li>
<li>The <code>-u</code> option allows to specify the user to impersonate instead of
the default of <code>root</code>.</li>
</ul>
<p>This will effectively run <code>brew update</code> like if you had switched to user
<code>foo</code> prior to running it, but without going through the hassle of
actually switching users every single time.</p>
<p>And for what it‚Äôs worth, you don‚Äôt need to create a new, dedicated user
for <code>brew</code>. In my case, since both my users are effectively, me, I
simply installed Homebrew from my personal user and use <code>sudo</code> to run
<code>brew</code> commands from my work user.</p>
<p>To make things even nicer, you can even add an alias in the <code>~/.zshrc</code>
of the user that needs to use <code>sudo</code>:</p>
<pre><code class="hljs language-sh"><span class="hljs-built_in">alias</span> brew=<span class="hljs-string">&#x27;sudo -Hu foo brew&#x27;</span>
</code></pre>
<h2 id="wrapping-up" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/homebrew-multi-user.html#wrapping-up"><span>Wrapping up</span></a></h2>
<p>That‚Äôs all for today. I hope this helped you figure your bug-free,
multi-user Homebrew situation! Peace. ‚úåÔ∏è</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1461136995544096773">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>How I set up a new Mac</title>
    <link href="https://www.codejam.info/2021/11/mac-setup.html" />
    <id>https://www.codejam.info/2021/11/mac-setup.html</id>
    <updated>2021-11-17T05:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>As I <a href="https://www.codejam.info/2021/11/yearly-hackintosh-upgrade-macos-monterey-with-opencore.html">recently blogged</a>,
I just upgraded to macOS Monterey taking it as an opportunity to start
from a clean, fresh, pristine system. This means I had to set up
everything again, which is not a big deal, but for the sake of
remembering it and making it even faster next time, I figured I‚Äôd write
about it.</p>
<p>This is the kind of blog post that‚Äôs <em>mostly</em> for my personal interest,
but if you got there somehow, you might take inspiration from my
settings, who knows!</p>
<p>But first, let‚Äôs ask the following question.</p>
<h2 id="why-start-fresh" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/mac-setup.html#why-start-fresh"><span>Why start fresh?</span></a></h2>
<p>While I could totally have migrated all my data from Big Sur, I like
to start from a clean slate every year or two, to get rid of all the
unnecessary garbage that accumulated over the years.</p>
<p>Wait, what garbage? Well, let me explain.</p>
<p>Every time you update a software (including the OS), there‚Äôs no
guarantee that the state you‚Äôll be in after the update would be the
same as if you installed the new version directly on a fresh system.
Actually, the opposite is pretty much guaranteed.</p>
<p>Most of the time this is not a big deal. Maybe you‚Äôre stuck with the
default settings of the version you originally installed instead of
the ones that would otherwise come with the latest version (i.e. Git
always defaults to <code>master</code> and you have to explicitly configure it to
use <code>main</code>, or any small things like this).</p>
<p>Or maybe some commands or tasks might run slightly slower because of
accumulated ‚Äúbloat‚Äù related to things you don‚Äôt use anymore and forgot
about (keys, passwords, certificates, trusted IP lists and whatnot
from stuff you connected to once or at least stopped connecting to
ages ago, the list of known Wi-Fi networks and <code>~/.ssh/known_hosts</code>
being a typical example).</p>
<p>While the above are pretty inoffensive cases, this kind of undefined
state drifts might cause more sneaky bugs, and ‚Äúworks on that machine‚Äù
kind of answers when you try to figure them out.</p>
<p>The same is also true when you uninstall a software; there‚Äôs no
guarantee that the state you‚Äôll be in after the removal will match the
one you would have been in if you didn‚Äôt install it in the first place.
And again, the opposite is pretty much guaranteed.</p>
<p><a href="https://nixos.org/">NixOS</a> solves some of those issues, but in the real
world, you‚Äôre likely gonna want to use many programs that are not
designed and packaged to be stateless, deterministic, reproducible and
purely functional, and using wrappers (or wrapping them yourself) often
comes at a tremendous cost in time and convenience.</p>
<p>My tradeoff so far? A fresh reinstall every other year, or whenever I
feel like I‚Äôve fucked around enough with that system‚Äôs state to be worth
a clean start.</p>
<h2 id="new-system-setup" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/mac-setup.html#new-system-setup"><span>New system setup</span></a></h2>
<p>Here‚Äôs the things I do when I log in the first time on my freshly
installed system.</p>
<ul>
<li>Get rid of all the garbage in the dock. I just leave the Finder and
the trash, because you can‚Äôt really remove them anyways (did you try
dragging the trash to the trash?), but I happen to use them so that‚Äôs
fine.</li>
<li>Open Safari to download <strong>Firefox</strong>. Very similar to how one would use
Internet Explorer (oh wait, Edge) to install a real browser on
Windows. This comparison might sound like a joke, but Safari
effectively became the new Internet Explorer regarding how far behind
they drag web standards, so this is sadly far more accurate than I‚Äôd
like it to be.</li>
<li>Download and install <strong>iTerm2</strong>.</li>
</ul>
<div class="note">
<p><strong>Note:</strong> I could have installed Firefox and iTerm2 with Homebrew (which
I add later) but for some reason there‚Äôs a few programs I kinda like to
install on their own. Don‚Äôt ask me why.</p>
<p>But now I think about it, it‚Äôs probably because Homebrew became so
ridiculously slow to update its repository and the installed software
that I‚Äôd rather keep the ones I want to be the most up-to-date separate
from Homebrew.</p>
<p>I‚Äôll otherwise update Homebrew once a month or two, or when I need to
install something new with it, and it forces me to upgrade everything
else at the same time.</p>
<p>As a general rule of thumb, everything graphical I tend to install on
its own, and all the CLI stuff is with Homebrew.</p>
</div>
<ul>
<li>Install <strong>Adobe Creative Cloud</strong> and the apps I use with it (Lightroom
Classic, Photoshop, Premiere and After Effects). In Creative Cloud
preferences, turn off file syncing and launch at login.
<ul>
<li>On a multi-user system, you‚Äôll need to sign in to Creative Cloud for
every single user to turn off file syncing and launch at login, even
the ones who don‚Äôt use Creative Cloud apps (because the preferences
pane is only accessible to logged in users). Now all my users have an
empty Creative Cloud account just for the sake of disabling it. I
fucking hate the current state of technology. üôÉ</li>
</ul>
</li>
<li>Install <strong>Logic Pro</strong> an download the full sound library. Sadly a fresh
Logic installation can‚Äôt reuse an existing sound library directory (I
like to keep mine on my hard drive instead of my limited size SSD), so
we need to download the whole 60 GB from scratch. Did I say I
hate the current state of technology already?</li>
<li>Press <kbd>Command</kbd> + <kbd>Shift</kbd> + <kbd>5</kbd> to open the
custom screenshot interface, where I can change the <strong>screenshot
directory</strong> to <code>~/Desktop/Screenshots</code>. I don‚Äôt like to clutter my
desktop with screenshots like it‚Äôs the case by default.</li>
<li>I download and run <a href="https://gist.github.com/adaugherity/7435890"><code>patch-edid.rb</code></a>
to <a href="https://www.codejam.info/2020/10/too-much-contrast-external-screen-macos-catalina.html">patch the EDID of my screen</a>
because since Catalina, macOS wants to communicate with it over YCbCr
instead of RGB and that causes colors and contrast to be fucked up.
This is extremely specific to my own screen.</li>
</ul>
<p>Now I‚Äôm ready to configure the <a href="https://www.codejam.info/2021/11/mac-setup.html#system-preferences">system preferences</a>,
<a href="https://www.codejam.info/2021/11/mac-setup.html#iterm2-settings">iTerm2 settings</a> and my <a href="https://www.codejam.info/2021/11/mac-setup.html#terminal-environment">terminal-environment</a>.</p>
<h2 id="system-preferences" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/mac-setup.html#system-preferences"><span>System preferences</span></a></h2>
<ul>
<li>In <strong>keyboard</strong> I set ‚Äúkey repeat‚Äù and ‚Äúdelay until repeat‚Äù to the
fastest possible. I like my keyboard to be snappy.</li>
<li>For the <strong>dock &amp; menu bar</strong>, I leave only <strong>Time Machine</strong> and <strong>fast
user switching</strong> if I‚Äôm on a multi-user system, and I set the
<strong>clock</strong> to 24 hours format.</li>
<li>I enable <strong>Time Machine</strong> backups to my usual drive after configuring
my exclude list (very specific to my data so not included here).</li>
<li>In <strong>energy saver</strong> I disable <strong>Power Nap</strong> because I don‚Äôt need my
machine to resume from sleep to check emails and run backups (after
all if I‚Äôm not using my machine there‚Äôs not much to back up anyways).</li>
<li>In <strong>displays</strong> I turn on <strong>Night Shift</strong> form sunset to sunrise.</li>
</ul>
<h2 id="iterm2-preferences" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/mac-setup.html#iterm2-preferences"><span>iTerm2 preferences</span></a></h2>
<ul>
<li>In <strong>appearance</strong>, <strong>windows</strong>, tick <strong>hide scrollbars</strong>.</li>
<li>In <strong>profiles</strong>, <strong>general</strong>, select <strong>reuse previous session‚Äôs
directory</strong> as working directory.</li>
<li>In <strong>profiles</strong>, <strong>terminal</strong>, tick <strong>silence bell</strong>.</li>
<li>In <strong>profiles</strong>, <strong>keys</strong>, <strong>key mappings</strong>, load the <strong>natural text
editing</strong> preset (allow it to remove whatever is already there), and
remove <kbd>Command</kbd> + <kbd>Left</kbd> and <kbd>Command</kbd> +
<kbd>Right</kbd> which otherwise shadow the shortcuts to navigate
between tabs.</li>
</ul>
<h2 id="terminal-environment" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/mac-setup.html#terminal-environment"><span>Terminal environment</span></a></h2>
<p>First, install <a href="https://brew.sh/">Homebrew</a> with whatever is the current
recommended way. Install it in the default place because otherwise it
won‚Äôt be able to leverage many prebuilt binaries that hardcode the
default prefix in them, and it‚Äôs utterly slow to compile everything. I‚Äôd
be running Gentoo if that‚Äôs what I wanted FFS. Also if you want to run
Homebrew on a multi-user system, <a href="https://www.codejam.info/2021/11/homebrew-multi-user.html">read that first</a>.</p>
<p>Then, make a SSH keypair or copy an existing one in <code>~/.ssh</code>. I usually
run <code>ssh-keygen</code> either way just to let it create the directory with the
proper permissions, even if I‚Äôll override the key later.</p>
<pre><code class="hljs language-sh">ssh-keygen
</code></pre>
<p>Clone my <a href="https://github.com/valeriangalliat/dotfiles">dotfiles</a>
directory and install my Mac preset (mainly my Zsh, Vim and Git
settings).</p>
<pre><code class="hljs language-sh">git <span class="hljs-built_in">clone</span> git@github.com:valeriangalliat/dotfiles.git
<span class="hljs-built_in">cd</span> dotfiles
make mac
<span class="hljs-built_in">cd</span>
</code></pre>
<p>Edit my default <code>~/.zshrc</code> and <code>~/.zshenv</code> templates and comment or
uncomment some of the stuff there that I may need, mainly enabling my
asdf helper (see below).</p>
<pre><code class="hljs language-sh">vim ~/.zshrc ~/.zshenv
</code></pre>
<p>Install whatever software I pretty much always use with Homebrew.</p>
<pre><code class="hljs language-sh">brew install rg fzf imagemagick ffmpeg ncdu htop
</code></pre>
<ul>
<li><a href="https://github.com/BurntSushi/ripgrep">ripgrep</a>
is my favorite way to search code.</li>
<li><a href="https://github.com/junegunn/fzf">fzf</a> is an awesome fuzzy finder.</li>
<li>I probably don‚Äôt need to introduce <a href="https://imagemagick.org/">ImageMagick</a>
and <a href="https://www.ffmpeg.org/">FFmpeg</a>.</li>
<li><a href="https://dev.yorhel.nl/ncdu">ncdu</a> is a cool tool to monitor disk usage.</li>
<li><a href="https://htop.dev/">htop</a> is an awesome process viewer.</li>
</ul>
<p>Install the <a href="https://github.com/asdf-vm/asdf">asdf</a> plugins I need
and whatever version is in my <code>~/.tool-versions</code>. My <code>~/.zshrc</code>
automatically installs asdf on the first invocation so no need to do
that manually.</p>
<pre><code class="hljs language-sh">asdf plugin add nodejs
<span class="hljs-comment"># asdf plugin add python</span>
<span class="hljs-comment"># asdf plugin add ruby</span>
<span class="hljs-comment"># asdf plugin add elixir</span>
<span class="hljs-comment"># asdf plugin add erlang</span>
asdf install
</code></pre>
<h2 id="wrapping-up" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/mac-setup.html#wrapping-up"><span>Wrapping up</span></a></h2>
<p>That‚Äôs pretty much the gist! This is a fairly straightforward and not
very time consuming checklist, and the main things that need to be
automated (my dotfiles) are.</p>
<p>I don‚Äôt think it‚Äôs worth automating my macOS system preferences somehow
as they might change in future versions anyways. Same thing for iTerm2,
where I definitely don‚Äôt want to copy over my whole configuration file
from an old installation, I‚Äôd rather start from the latest and greatest
defaults and just tweak what I need on top of it.</p>
<p>Everything else is very specific to the current machine I‚Äôm setting up
and I leave them to my discretion at the time of installing.</p>
<p>If you read until there, I hope that you learnt something, or that it
inspired you to document your base setup in a similar way. Cheers!</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1461136814400577537">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
  <entry>
    <title>Desktop power button not responding and random sleep issues</title>
    <link href="https://www.codejam.info/2021/11/computer-sleep-issues-power-button-not-responding.html" />
    <id>https://www.codejam.info/2021/11/computer-sleep-issues-power-button-not-responding.html</id>
    <updated>2021-11-16T05:00:00.000Z</updated>
    <content type="html"><![CDATA[<p>A few days ago I started having issues with my computer. When I was
putting it to sleep (or hibernating), it would either crash and turn off
immediately, or would fail to power the GPU and USB ports after waking up,
leaving me with a black screen and unresponsive keyboard and mouse,
and forcing me to hard reset it.</p>
<p>More notably, when it crashed instantly as it entered sleep state, the
power button didn‚Äôt work anymore and I needed to unplug the machine for
a minute or so before being able to start it again. This didn‚Äôt always
work the first shot though but usually after doing it a few times, it
would eventually boot up again.</p>
<p>It‚Äôs something that had already happened to me in rare occurrences
during the past year, enough to get me frustrated and somewhat anxious
when my machine effectively appeared to be bricked (that‚Äôs how I found
the unplug replug trick by despair), but not to a point where I spent
the time to understand and fix the root cause, as it always kinda fixed
itself without my intervention.</p>
<p>I remember one time where the unplug replug trick didn‚Äôt work to a point
where I decided to open the machine and see what I can do inside, but
interestingly just the sheer fact of opening it and moving it around so
that I can work on it fixed the problem, so I was just happy to have a
working computer again and didn‚Äôt question it much.</p>
<p>That‚Äôs until this week, coincidentally right before I <a href="https://www.codejam.info/2021/11/yearly-hackintosh-upgrade-macos-monterey-with-opencore.html">upgrade to macOS Monterey</a>.</p>
<h2 id="kernel-panic-sleep-wake-failure-in-efi" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/computer-sleep-issues-power-button-not-responding.html#kernel-panic-sleep-wake-failure-in-efi"><span>Kernel panic: sleep wake failure in EFI</span></a></h2>
<p>I was still running Big Sur back then and it‚Äôs been running smooth the
whole year, but the day before I decide to upgrade to Monterey, I get
those sleep issues again, mainly lack of GPU and USB power on wake
(manifested by a black screen and unresponsive keyboard and mouse).</p>
<p>I figured it wasn‚Äôt worth fixing it now, and I might as well upgrade and
see if it still happens. And while <a href="https://www.codejam.info/2021/11/yearly-hackintosh-upgrade-macos-monterey-with-opencore.html">the upgrade goes smooth AF</a>,
I notice even more of those sleep issues after the fact. They‚Äôre not
occasional anymore, they happen pretty much 90% of the time the computer
sleeps, seemingly at random. It either fails to power the connected
devices on wake or just crashes right away when being put to sleep and
causes the unresponsive power button issue.</p>
<p>At that point I assume that it comes from the upgrade to Monterey,
especially because I‚Äôm running a Hackintosh and I suspect that it must
be for sure the culprit. After all, there‚Äôs ‚Äúhack‚Äù in the name, even
though it‚Äôs been impressively stable <a href="https://www.codejam.info/2020/11/upgrading-hackintosh-catalina-big-sur-clover-opencore.html">since I use OpenCore</a>.</p>
<p>I spend more time than I‚Äôm willing to admit trying everything to fix
<a href="https://dortania.github.io/OpenCore-Post-Install/universal/pm.html">power management</a>
and <a href="https://dortania.github.io/OpenCore-Post-Install/universal/sleep.html">sleep</a>,
including using <a href="https://github.com/acidanthera/CPUFriend/releases">CPUFriend</a>
and <a href="https://github.com/corpnewt/CPUFriendFriend">CPUFriendFriend</a> to
fix the ‚Äúsleep wake failure in EFI‚Äù system panics. But none of that
changes anything. I try to understand the different macOS sleep modes
and <a href="https://dortania.github.io/OpenCore-Post-Install/universal/sleep.html#preparations">various</a>
<code>pmset</code> <a href="https://github.com/li3p/dell-optiplex-9020-hackintosh-opencore#sleep">settings</a>
to tune them and make things work but without any luck.</p>
<p>I also try to see if it‚Äôs related to any of my external devices, and
while the issues seem to happen less frequently when I unplug my 3
external drives and my external sound card, they still happen somewhat
randomly in a way that I can‚Äôt reliably isolate any of those as being
the problem.</p>
<h2 id="questioning-the-hardware" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/computer-sleep-issues-power-button-not-responding.html#questioning-the-hardware"><span>Questioning the hardware</span></a></h2>
<p>At that point I lost more than 12 hours on this issue and I‚Äôm going on
my second day of relentless debugging. I feel like I‚Äôve tried everything
possible and documented online about fixing sleep at the software,
drivers and configuration level, and the precise issues and symptoms I
run into don‚Äôt seem to exactly match any of the topics I find online.</p>
<p>I have a TP-Link PCI Wi-Fi card in there and I‚Äôm thinking maybe it‚Äôs
unsupported in a way that somehow causes the crashes with the new OS? I
open the case and remove it, but this doesn‚Äôt seem to change anything.</p>
<p>I start questioning my actual hardware, looking more precisely at the
ssue where the power button is unresponsive. I find a
<a href="https://www.reddit.com/r/buildapc/comments/3wn2d8/discussion_just_a_reminder_that_a_dead_bios/">number</a>
<a href="https://www.quora.com/Can-a-dead-CMOS-battery-stop-a-computer-from-booting">of</a>
<a href="https://steamcommunity.com/discussions/forum/11/618460171318429760/">pages</a>
stating that a weak or dead CMOS battery could cause it (or also a
faulty power supply üòÖ).</p>
<p>The CMOS battery is easier to test and cheaper to replace than the power
supply, so I start with that. My machine is now 5 years old so it‚Äôs not
exactly brand new, even though I‚Äôve kept desktop computers much longer
than that in the past without needing to replace a CMOS battery once in
my life. Regardless, I take it out and test it with a multimeter only to
find that it delivers a solid 3 volts as it‚Äôs supposed to. I even test a
brand new battery to compare and get the same results! Not the issue
here, even though I wish it would have been as easy as replacing a
CR2032 battery.</p>
<p>But when I put the battery back in place, my computer still doesn‚Äôt
start! And turning off and on the PSU again doesn‚Äôt seem to work
anymore. Did I accidentally fry the motherboard while manipulating the
battery? I try one more time to be relieved by the sound of my machine
booting, and welcoming me with a fresh BIOS reset screen. I configure
everything again and boot macOS. At that point, all the USB devices are
unplugged and I‚Äôm on a freshly configured BIOS. I try the sleep again
but sadly it keeps crashing.</p>
<h2 id="very-specific-googling-and-final-fix" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/computer-sleep-issues-power-button-not-responding.html#very-specific-googling-and-final-fix"><span>Very specific googling, and final fix</span></a></h2>
<p>As a last resort, I try searching the very specific symptom I‚Äôm having
and the hack I found to work around it: ‚Äúneed to unplug and replug
computer for it to start‚Äù. This sound so ridiculous and far fetched that
I‚Äôve never thought about searching just that before, but I‚Äôm pretty
desperate at that point.</p>
<p>To my whole surprise, I‚Äôm <a href="https://www.ifixit.com/Answers/View/255569/Why+do+I+have+to+first+unplug+my+computer+to+start">not the only one</a>
to <a href="https://forums.tomshardware.com/threads/computer-shuts-off-and-wont-turn-back-on-until-i-unplug-it.217732/">have this issue</a>,
and in those two pages from respectively 5 and 10 years ago, the pinned
solution is the same:</p>
<blockquote>
<p>Open up the computer and look at all the extra cables inside make sure
they‚Äôre all neatly bundled away from any part of the case they may be
shorting it out.</p>
<p>‚Äî <a href="https://www.ifixit.com/Answers/View/255569/Why+do+I+have+to+first+unplug+my+computer+to+start#answer256519">Why do I have to first unplug my computer to start?</a></p>
</blockquote>
<blockquote>
<p>After trying just about everything software wise (except a complete
Windows reinstall) I was able to track the problem down to my PSU as
many forums had suggested. It tuned out that some of the many extra
connectors I had on my PSU I had stuffed into an extra empty drive bay
in order to reduce the clutter inside the case. Somehow one of them
had been causing a short. After moving the cables around and tiding
them up neat and proper the problem has completely gone away (went
from daily occurrence to two weeks so far with no problem).</p>
<p>‚Äî <a href="https://forums.tomshardware.com/threads/computer-shuts-off-and-wont-turn-back-on-until-i-unplug-it.217732/#post-11597639">Computer shuts off and won‚Äôt turn back on until I unplug it</a></p>
</blockquote>
<p>I did also stuff all my dangling PSU cables in an empty bay, and I
thought I was doing myself a service by doing so, preventing a mess of
cables in the middle of the case! I took the cables out of there, tidied
them up differently and put them back in there in a way where they
shouldn‚Äôt move around too much or touch anything.</p>
<p>After that? The computer boots just fine and I haven‚Äôt noticed a single
crash or any of the issues I was having around sleep and wake. I
progressively started to plug my sound card, then my external drives,
testing the sleep every time (to more easily identify a culprit if it
wasn‚Äôt fixed), and it kept working. I‚Äôve restored all of my original
‚Äúclean‚Äù drivers, bootloader and system configuration (that I had
modified during my attempts to fix the issue earlier), none of them
caused any problem again.</p>
<p>I‚Äôve performed more than 20 successful sleep and wake cycles since then,
whether I explicitly put the computer to sleep or let it hibernates by
itself after a period of inactivity.</p>
<h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="https://www.codejam.info/2021/11/computer-sleep-issues-power-button-not-responding.html#conclusion"><span>Conclusion</span></a></h2>
<p>At that point I‚Äôm somewhat confident that like in the two posts above,
the dangling PSU cables in the unit were shorting and causes those
issues. The fact they caused instability specifically at the sleep and
wake level were probably very specific to me and the precise way the
cables where shorting each other.</p>
<p>And the reason why the problem appeared to fix itself when unplugging
and replugging the machine, or sometimes by just opening it and looking
at it, doing no particular change inside? Those mere manipulations
probably bumped the dangling wires inside just enough so that they
weren‚Äôt shorting anymore, until they do again.</p>
<p>It‚Äôs still hard for me to precisely explain why this was happening
especially around sleep, and how the machine would otherwise be
perfectly stable and never crash as long as it didn‚Äôt hit a sleep and
wake cycle. Maybe something to do with the fans slightly moving the
dangling cables while blowing at them? I‚Äôm not technical enough in
hardware and electronics to make sense of that, so if any of you reading
that have a better idea, please <a href="https://www.codejam.info/val.html#contact">let me know</a>!</p>
<p>And at the very least I hope that if you‚Äôre reading this because of a
similar issue, that helped you sort this problem out as well!</p>
<section class="post-footer">
  <h3>Want to leave a comment?</h3>
  <p>
    Join the discussion on <a href="https://twitter.com/valeriangalliat/status/1459909788041682952">Twitter</a> or send me an <a href="mailto:val@codejam.info">email</a>! üíå<br>
    This post helped you? <a href="https://ko-fi.com/funkyval">Buy me a coffee</a>! üçª
  </p>
</section>
]]></content>
  </entry>
</feed>
